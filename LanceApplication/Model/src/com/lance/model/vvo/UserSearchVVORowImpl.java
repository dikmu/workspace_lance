package com.lance.model.vvo;

import com.zngh.platform.front.core.model.BaseViewRowImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.domain.ClobDomain;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jan 05 17:01:14 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UserSearchVVORowImpl extends BaseViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UserName,
        TrueName,
        DisplayName,
        Email,
        Img,
        Country,
        AccountType,
        CompanyId,
        PhoneNumber,
        Attach,
        JobTitle,
        Video,
        Description,
        WebsiteUrl,
        ImNumberA,
        ImTypeA,
        ImNumberB,
        ImTypeB,
        ImNumberC,
        ImTypeC,
        LocationA,
        LocationB,
        Tagline,
        HourlyRate,
        ChargeRate,
        Overview,
        ServiceDescription,
        PaymentTerms,
        Keywords,
        AddressDisplay,
        ContactInfo,
        CreateBy,
        CreateOn,
        ModifyBy,
        ModifyOn,
        Version,
        LastLoginTime,
        CanBeSearch,
        DefaultRole,
        CountryIdA,
        CountryNameA,
        ProvinceIdA,
        ProvinceNameA,
        CityIdA,
        CityNameA,
        CountryIdB,
        CountryNameB,
        ProvinceIdB,
        ProvinceNameB,
        CityIdB,
        CityNameB,
        IndexField,
        RoleLevel,
        RoleName;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int TRUENAME = AttributesEnum.TrueName.index();
    public static final int DISPLAYNAME = AttributesEnum.DisplayName.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int IMG = AttributesEnum.Img.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int ACCOUNTTYPE = AttributesEnum.AccountType.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int ATTACH = AttributesEnum.Attach.index();
    public static final int JOBTITLE = AttributesEnum.JobTitle.index();
    public static final int VIDEO = AttributesEnum.Video.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int WEBSITEURL = AttributesEnum.WebsiteUrl.index();
    public static final int IMNUMBERA = AttributesEnum.ImNumberA.index();
    public static final int IMTYPEA = AttributesEnum.ImTypeA.index();
    public static final int IMNUMBERB = AttributesEnum.ImNumberB.index();
    public static final int IMTYPEB = AttributesEnum.ImTypeB.index();
    public static final int IMNUMBERC = AttributesEnum.ImNumberC.index();
    public static final int IMTYPEC = AttributesEnum.ImTypeC.index();
    public static final int LOCATIONA = AttributesEnum.LocationA.index();
    public static final int LOCATIONB = AttributesEnum.LocationB.index();
    public static final int TAGLINE = AttributesEnum.Tagline.index();
    public static final int HOURLYRATE = AttributesEnum.HourlyRate.index();
    public static final int CHARGERATE = AttributesEnum.ChargeRate.index();
    public static final int OVERVIEW = AttributesEnum.Overview.index();
    public static final int SERVICEDESCRIPTION = AttributesEnum.ServiceDescription.index();
    public static final int PAYMENTTERMS = AttributesEnum.PaymentTerms.index();
    public static final int KEYWORDS = AttributesEnum.Keywords.index();
    public static final int ADDRESSDISPLAY = AttributesEnum.AddressDisplay.index();
    public static final int CONTACTINFO = AttributesEnum.ContactInfo.index();
    public static final int CREATEBY = AttributesEnum.CreateBy.index();
    public static final int CREATEON = AttributesEnum.CreateOn.index();
    public static final int MODIFYBY = AttributesEnum.ModifyBy.index();
    public static final int MODIFYON = AttributesEnum.ModifyOn.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int LASTLOGINTIME = AttributesEnum.LastLoginTime.index();
    public static final int CANBESEARCH = AttributesEnum.CanBeSearch.index();
    public static final int DEFAULTROLE = AttributesEnum.DefaultRole.index();
    public static final int COUNTRYIDA = AttributesEnum.CountryIdA.index();
    public static final int COUNTRYNAMEA = AttributesEnum.CountryNameA.index();
    public static final int PROVINCEIDA = AttributesEnum.ProvinceIdA.index();
    public static final int PROVINCENAMEA = AttributesEnum.ProvinceNameA.index();
    public static final int CITYIDA = AttributesEnum.CityIdA.index();
    public static final int CITYNAMEA = AttributesEnum.CityNameA.index();
    public static final int COUNTRYIDB = AttributesEnum.CountryIdB.index();
    public static final int COUNTRYNAMEB = AttributesEnum.CountryNameB.index();
    public static final int PROVINCEIDB = AttributesEnum.ProvinceIdB.index();
    public static final int PROVINCENAMEB = AttributesEnum.ProvinceNameB.index();
    public static final int CITYIDB = AttributesEnum.CityIdB.index();
    public static final int CITYNAMEB = AttributesEnum.CityNameB.index();
    public static final int INDEXFIELD = AttributesEnum.IndexField.index();
    public static final int ROLELEVEL = AttributesEnum.RoleLevel.index();
    public static final int ROLENAME = AttributesEnum.RoleName.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UserSearchVVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute UserName.
     * @return the UserName
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute TrueName.
     * @return the TrueName
     */
    public String getTrueName() {
        return (String) getAttributeInternal(TRUENAME);
    }

    /**
     * Gets the attribute value for the calculated attribute DisplayName.
     * @return the DisplayName
     */
    public String getDisplayName() {
        return (String) getAttributeInternal(DISPLAYNAME);
    }

    /**
     * Gets the attribute value for the calculated attribute Email.
     * @return the Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Gets the attribute value for the calculated attribute Img.
     * @return the Img
     */
    public String getImg() {
        return (String) getAttributeInternal(IMG);
    }

    /**
     * Gets the attribute value for the calculated attribute Country.
     * @return the Country
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Gets the attribute value for the calculated attribute AccountType.
     * @return the AccountType
     */
    public String getAccountType() {
        return (String) getAttributeInternal(ACCOUNTTYPE);
    }

    /**
     * Gets the attribute value for the calculated attribute CompanyId.
     * @return the CompanyId
     */
    public String getCompanyId() {
        return (String) getAttributeInternal(COMPANYID);
    }

    /**
     * Gets the attribute value for the calculated attribute PhoneNumber.
     * @return the PhoneNumber
     */
    public String getPhoneNumber() {
        return (String) getAttributeInternal(PHONENUMBER);
    }

    /**
     * Gets the attribute value for the calculated attribute Attach.
     * @return the Attach
     */
    public String getAttach() {
        return (String) getAttributeInternal(ATTACH);
    }

    /**
     * Gets the attribute value for the calculated attribute JobTitle.
     * @return the JobTitle
     */
    public String getJobTitle() {
        return (String) getAttributeInternal(JOBTITLE);
    }

    /**
     * Gets the attribute value for the calculated attribute Video.
     * @return the Video
     */
    public String getVideo() {
        return (String) getAttributeInternal(VIDEO);
    }

    /**
     * Gets the attribute value for the calculated attribute Description.
     * @return the Description
     */
    public ClobDomain getDescription() {
        return (ClobDomain) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Gets the attribute value for the calculated attribute WebsiteUrl.
     * @return the WebsiteUrl
     */
    public String getWebsiteUrl() {
        return (String) getAttributeInternal(WEBSITEURL);
    }

    /**
     * Gets the attribute value for the calculated attribute ImNumberA.
     * @return the ImNumberA
     */
    public String getImNumberA() {
        return (String) getAttributeInternal(IMNUMBERA);
    }

    /**
     * Gets the attribute value for the calculated attribute ImTypeA.
     * @return the ImTypeA
     */
    public String getImTypeA() {
        return (String) getAttributeInternal(IMTYPEA);
    }

    /**
     * Gets the attribute value for the calculated attribute ImNumberB.
     * @return the ImNumberB
     */
    public String getImNumberB() {
        return (String) getAttributeInternal(IMNUMBERB);
    }

    /**
     * Gets the attribute value for the calculated attribute ImTypeB.
     * @return the ImTypeB
     */
    public String getImTypeB() {
        return (String) getAttributeInternal(IMTYPEB);
    }

    /**
     * Gets the attribute value for the calculated attribute ImNumberC.
     * @return the ImNumberC
     */
    public String getImNumberC() {
        return (String) getAttributeInternal(IMNUMBERC);
    }

    /**
     * Gets the attribute value for the calculated attribute ImTypeC.
     * @return the ImTypeC
     */
    public String getImTypeC() {
        return (String) getAttributeInternal(IMTYPEC);
    }

    /**
     * Gets the attribute value for the calculated attribute LocationA.
     * @return the LocationA
     */
    public String getLocationA() {
        return (String) getAttributeInternal(LOCATIONA);
    }

    /**
     * Gets the attribute value for the calculated attribute LocationB.
     * @return the LocationB
     */
    public String getLocationB() {
        return (String) getAttributeInternal(LOCATIONB);
    }

    /**
     * Gets the attribute value for the calculated attribute Tagline.
     * @return the Tagline
     */
    public String getTagline() {
        return (String) getAttributeInternal(TAGLINE);
    }

    /**
     * Gets the attribute value for the calculated attribute HourlyRate.
     * @return the HourlyRate
     */
    public BigDecimal getHourlyRate() {
        return (BigDecimal) getAttributeInternal(HOURLYRATE);
    }

    /**
     * Gets the attribute value for the calculated attribute ChargeRate.
     * @return the ChargeRate
     */
    public BigDecimal getChargeRate() {
        return (BigDecimal) getAttributeInternal(CHARGERATE);
    }

    /**
     * Gets the attribute value for the calculated attribute Overview.
     * @return the Overview
     */
    public String getOverview() {
        return (String) getAttributeInternal(OVERVIEW);
    }

    /**
     * Gets the attribute value for the calculated attribute ServiceDescription.
     * @return the ServiceDescription
     */
    public ClobDomain getServiceDescription() {
        return (ClobDomain) getAttributeInternal(SERVICEDESCRIPTION);
    }

    /**
     * Gets the attribute value for the calculated attribute PaymentTerms.
     * @return the PaymentTerms
     */
    public ClobDomain getPaymentTerms() {
        return (ClobDomain) getAttributeInternal(PAYMENTTERMS);
    }

    /**
     * Gets the attribute value for the calculated attribute Keywords.
     * @return the Keywords
     */
    public String getKeywords() {
        return (String) getAttributeInternal(KEYWORDS);
    }

    /**
     * Gets the attribute value for the calculated attribute AddressDisplay.
     * @return the AddressDisplay
     */
    public String getAddressDisplay() {
        return (String) getAttributeInternal(ADDRESSDISPLAY);
    }

    /**
     * Gets the attribute value for the calculated attribute ContactInfo.
     * @return the ContactInfo
     */
    public String getContactInfo() {
        return (String) getAttributeInternal(CONTACTINFO);
    }

    /**
     * Gets the attribute value for the calculated attribute CreateBy.
     * @return the CreateBy
     */
    public String getCreateBy() {
        return (String) getAttributeInternal(CREATEBY);
    }

    /**
     * Gets the attribute value for the calculated attribute CreateOn.
     * @return the CreateOn
     */
    public Timestamp getCreateOn() {
        return (Timestamp) getAttributeInternal(CREATEON);
    }

    /**
     * Gets the attribute value for the calculated attribute ModifyBy.
     * @return the ModifyBy
     */
    public String getModifyBy() {
        return (String) getAttributeInternal(MODIFYBY);
    }

    /**
     * Gets the attribute value for the calculated attribute ModifyOn.
     * @return the ModifyOn
     */
    public Timestamp getModifyOn() {
        return (Timestamp) getAttributeInternal(MODIFYON);
    }

    /**
     * Gets the attribute value for the calculated attribute Version.
     * @return the Version
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }

    /**
     * Gets the attribute value for the calculated attribute LastLoginTime.
     * @return the LastLoginTime
     */
    public Timestamp getLastLoginTime() {
        return (Timestamp) getAttributeInternal(LASTLOGINTIME);
    }

    /**
     * Gets the attribute value for the calculated attribute CanBeSearch.
     * @return the CanBeSearch
     */
    public BigDecimal getCanBeSearch() {
        return (BigDecimal) getAttributeInternal(CANBESEARCH);
    }

    /**
     * Gets the attribute value for the calculated attribute DefaultRole.
     * @return the DefaultRole
     */
    public String getDefaultRole() {
        return (String) getAttributeInternal(DEFAULTROLE);
    }

    /**
     * Gets the attribute value for the calculated attribute CountryIdA.
     * @return the CountryIdA
     */
    public String getCountryIdA() {
        return (String) getAttributeInternal(COUNTRYIDA);
    }

    /**
     * Gets the attribute value for the calculated attribute CountryNameA.
     * @return the CountryNameA
     */
    public String getCountryNameA() {
        return (String) getAttributeInternal(COUNTRYNAMEA);
    }

    /**
     * Gets the attribute value for the calculated attribute ProvinceIdA.
     * @return the ProvinceIdA
     */
    public String getProvinceIdA() {
        return (String) getAttributeInternal(PROVINCEIDA);
    }

    /**
     * Gets the attribute value for the calculated attribute ProvinceNameA.
     * @return the ProvinceNameA
     */
    public String getProvinceNameA() {
        return (String) getAttributeInternal(PROVINCENAMEA);
    }

    /**
     * Gets the attribute value for the calculated attribute CityIdA.
     * @return the CityIdA
     */
    public String getCityIdA() {
        return (String) getAttributeInternal(CITYIDA);
    }

    /**
     * Gets the attribute value for the calculated attribute CityNameA.
     * @return the CityNameA
     */
    public String getCityNameA() {
        return (String) getAttributeInternal(CITYNAMEA);
    }

    /**
     * Gets the attribute value for the calculated attribute CountryIdB.
     * @return the CountryIdB
     */
    public String getCountryIdB() {
        return (String) getAttributeInternal(COUNTRYIDB);
    }

    /**
     * Gets the attribute value for the calculated attribute CountryNameB.
     * @return the CountryNameB
     */
    public String getCountryNameB() {
        return (String) getAttributeInternal(COUNTRYNAMEB);
    }

    /**
     * Gets the attribute value for the calculated attribute ProvinceIdB.
     * @return the ProvinceIdB
     */
    public String getProvinceIdB() {
        return (String) getAttributeInternal(PROVINCEIDB);
    }

    /**
     * Gets the attribute value for the calculated attribute ProvinceNameB.
     * @return the ProvinceNameB
     */
    public String getProvinceNameB() {
        return (String) getAttributeInternal(PROVINCENAMEB);
    }

    /**
     * Gets the attribute value for the calculated attribute CityIdB.
     * @return the CityIdB
     */
    public String getCityIdB() {
        return (String) getAttributeInternal(CITYIDB);
    }

    /**
     * Gets the attribute value for the calculated attribute CityNameB.
     * @return the CityNameB
     */
    public String getCityNameB() {
        return (String) getAttributeInternal(CITYNAMEB);
    }

    /**
     * Gets the attribute value for the calculated attribute IndexField.
     * @return the IndexField
     */
    public String getIndexField() {
        return (String) getAttributeInternal(INDEXFIELD);
    }

    /**
     * Gets the attribute value for the calculated attribute RoleLevel.
     * @return the RoleLevel
     */
    public String getRoleLevel() {
        return (String) getAttributeInternal(ROLELEVEL);
    }

    /**
     * Gets the attribute value for the calculated attribute RoleName.
     * @return the RoleName
     */
    public String getRoleName() {
        return (String) getAttributeInternal(ROLENAME);
    }
}

