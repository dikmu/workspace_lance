package com.lance.model.vo;

import com.zngh.platform.front.core.model.BaseEntityImpl;
import com.zngh.platform.front.core.model.BaseViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Oct 18 19:17:31 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SkillsVORowImpl extends BaseViewRowImpl {
    public static final int ENTITY_SKILLSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Uuid,
        SuperTypeId,
        Name;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int UUID = AttributesEnum.Uuid.index();
    public static final int SUPERTYPEID = AttributesEnum.SuperTypeId.index();
    public static final int NAME = AttributesEnum.Name.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SkillsVORowImpl() {
    }

    /**
     * Gets SkillsEO entity object.
     * @return the SkillsEO
     */
    public BaseEntityImpl getSkillsEO() {
        return (BaseEntityImpl) getEntity(ENTITY_SKILLSEO);
    }

    /**
     * Gets the attribute value for UUID using the alias name Uuid.
     * @return the UUID
     */
    public String getUuid() {
        return (String) getAttributeInternal(UUID);
    }

    /**
     * Sets <code>value</code> as attribute value for UUID using the alias name Uuid.
     * @param value value to set the UUID
     */
    public void setUuid(String value) {
        setAttributeInternal(UUID, value);
    }

    /**
     * Gets the attribute value for SUPER_TYPE_ID using the alias name SuperTypeId.
     * @return the SUPER_TYPE_ID
     */
    public String getSuperTypeId() {
        return (String) getAttributeInternal(SUPERTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUPER_TYPE_ID using the alias name SuperTypeId.
     * @param value value to set the SUPER_TYPE_ID
     */
    public void setSuperTypeId(String value) {
        setAttributeInternal(SUPERTYPEID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }
}

