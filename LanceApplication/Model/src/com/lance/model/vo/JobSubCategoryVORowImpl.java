package com.lance.model.vo;

import com.zngh.platform.front.core.model.BaseEntityImpl;
import com.zngh.platform.front.core.model.BaseViewRowImpl;

import com.zngh.platform.front.core.model.cache.AuthCache;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Feb 12 09:54:28 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobSubCategoryVORowImpl extends BaseViewRowImpl {


    public static final int ENTITY_JOBSUBCATEGORYEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Uuid,
        CategoryId,
        Name,
        Description,
        CreateBy,
        CreateOn,
        ModifyBy,
        ModifyOn,
        Version,
        CreateByName,
        ModifyByName,
        JobSubCategorySubmit,
        JobSubCategoryExperts,
        UUserVO1,
        UUserVO2;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int UUID = AttributesEnum.Uuid.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CREATEBY = AttributesEnum.CreateBy.index();
    public static final int CREATEON = AttributesEnum.CreateOn.index();
    public static final int MODIFYBY = AttributesEnum.ModifyBy.index();
    public static final int MODIFYON = AttributesEnum.ModifyOn.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int CREATEBYNAME = AttributesEnum.CreateByName.index();
    public static final int MODIFYBYNAME = AttributesEnum.ModifyByName.index();
    public static final int JOBSUBCATEGORYSUBMIT = AttributesEnum.JobSubCategorySubmit.index();
    public static final int JOBSUBCATEGORYEXPERTS = AttributesEnum.JobSubCategoryExperts.index();
    public static final int UUSERVO1 = AttributesEnum.UUserVO1.index();
    public static final int UUSERVO2 = AttributesEnum.UUserVO2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobSubCategoryVORowImpl() {
    }

    /**
     * Gets JobSubCategoryEO entity object.
     * @return the JobSubCategoryEO
     */
    public BaseEntityImpl getJobSubCategoryEO() {
        return (BaseEntityImpl) getEntity(ENTITY_JOBSUBCATEGORYEO);
    }

    /**
     * Gets the attribute value for UUID using the alias name Uuid.
     * @return the UUID
     */
    public String getUuid() {
        return (String) getAttributeInternal(UUID);
    }

    /**
     * Sets <code>value</code> as attribute value for UUID using the alias name Uuid.
     * @param value value to set the UUID
     */
    public void setUuid(String value) {
        setAttributeInternal(UUID, value);
    }

    /**
     * Gets the attribute value for CATEGORY_ID using the alias name CategoryId.
     * @return the CATEGORY_ID
     */
    public String getCategoryId() {
        return (String) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY_ID using the alias name CategoryId.
     * @param value value to set the CATEGORY_ID
     */
    public void setCategoryId(String value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for CREATE_BY using the alias name CreateBy.
     * @return the CREATE_BY
     */
    public String getCreateBy() {
        return (String) getAttributeInternal(CREATEBY);
    }

    /**
     * Gets the attribute value for CREATE_ON using the alias name CreateOn.
     * @return the CREATE_ON
     */
    public Timestamp getCreateOn() {
        return (Timestamp) getAttributeInternal(CREATEON);
    }

    /**
     * Gets the attribute value for MODIFY_BY using the alias name ModifyBy.
     * @return the MODIFY_BY
     */
    public String getModifyBy() {
        return (String) getAttributeInternal(MODIFYBY);
    }

    /**
     * Gets the attribute value for MODIFY_ON using the alias name ModifyOn.
     * @return the MODIFY_ON
     */
    public Timestamp getModifyOn() {
        return (Timestamp) getAttributeInternal(MODIFYON);
    }

    /**
     * Gets the attribute value for VERSION using the alias name Version.
     * @return the VERSION
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }

    /**
     * Gets the attribute value for the calculated attribute CreateByName.
     * @return the CreateByName
     */
    public String getCreateByName() {
        return AuthCache.getUserDisplayNameByUserId(this.getCreateBy());
    }

    /**
     * Gets the attribute value for the calculated attribute ModifyByName.
     * @return the ModifyByName
     */
    public String getModifyByName() {
        return AuthCache.getUserDisplayNameByUserId(this.getModifyBy());
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link JobSubCategorySubmit.
     */
    public RowIterator getJobSubCategorySubmit() {
        return (RowIterator) getAttributeInternal(JOBSUBCATEGORYSUBMIT);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link JobSubCategoryExperts.
     */
    public RowIterator getJobSubCategoryExperts() {
        return (RowIterator) getAttributeInternal(JOBSUBCATEGORYEXPERTS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UUserVO1.
     */
    public RowSet getUUserVO1() {
        return (RowSet) getAttributeInternal(UUSERVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UUserVO2.
     */
    public RowSet getUUserVO2() {
        return (RowSet) getAttributeInternal(UUSERVO2);
    }
}

