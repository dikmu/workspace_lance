package com.lance.model.vo;

import com.zngh.platform.front.core.model.BaseEntityImpl;
import com.zngh.platform.front.core.model.BaseViewRowImpl;

import java.math.BigDecimal;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 21 18:45:33 CST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class LancerVORowImpl extends BaseViewRowImpl {


    public static final int ENTITY_LANCEREO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Uuid,
        Country,
        DisplayName,
        Email,
        Img,
        TrueName,
        UserName,
        AccountType,
        CompanyId,
        CompanyName,
        LancerResume,
        LocationCountryVVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int UUID = AttributesEnum.Uuid.index();
    public static final int COUNTRY = AttributesEnum.Country.index();
    public static final int DISPLAYNAME = AttributesEnum.DisplayName.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int IMG = AttributesEnum.Img.index();
    public static final int TRUENAME = AttributesEnum.TrueName.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int ACCOUNTTYPE = AttributesEnum.AccountType.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int COMPANYNAME = AttributesEnum.CompanyName.index();
    public static final int LANCERRESUME = AttributesEnum.LancerResume.index();
    public static final int LOCATIONCOUNTRYVVO1 = AttributesEnum.LocationCountryVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public LancerVORowImpl() {
    }

    /**
     * Gets LancerEO entity object.
     * @return the LancerEO
     */
    public BaseEntityImpl getLancerEO() {
        return (BaseEntityImpl) getEntity(ENTITY_LANCEREO);
    }

    /**
     * Gets the attribute value for UUID using the alias name Uuid.
     * @return the UUID
     */
    public String getUuid() {
        return (String) getAttributeInternal(UUID);
    }

    /**
     * Sets <code>value</code> as attribute value for UUID using the alias name Uuid.
     * @param value value to set the UUID
     */
    public void setUuid(String value) {
        setAttributeInternal(UUID, value);
    }

    /**
     * Gets the attribute value for IMG using the alias name Img.
     * @return the IMG
     */
    public String getImg() {
        return (String) getAttributeInternal(IMG);
    }

    /**
     * Sets <code>value</code> as attribute value for IMG using the alias name Img.
     * @param value value to set the IMG
     */
    public void setImg(String value) {
        setAttributeInternal(IMG, value);
    }

    /**
     * Gets the attribute value for USER_NAME using the alias name UserName.
     * @return the USER_NAME
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_NAME using the alias name UserName.
     * @param value value to set the USER_NAME
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for EMAIL using the alias name Email.
     * @return the EMAIL
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for EMAIL using the alias name Email.
     * @param value value to set the EMAIL
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }


    /**
     * Gets the attribute value for DISPLAY_NAME using the alias name DisplayName.
     * @return the DISPLAY_NAME
     */
    public String getDisplayName() {
        return (String) getAttributeInternal(DISPLAYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for DISPLAY_NAME using the alias name DisplayName.
     * @param value value to set the DISPLAY_NAME
     */
    public void setDisplayName(String value) {
        setAttributeInternal(DISPLAYNAME, value);
    }

    /**
     * Gets the attribute value for COUNTRY using the alias name Country.
     * @return the COUNTRY
     */
    public String getCountry() {
        return (String) getAttributeInternal(COUNTRY);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY using the alias name Country.
     * @param value value to set the COUNTRY
     */
    public void setCountry(String value) {
        setAttributeInternal(COUNTRY, value);
    }

    /**
     * Gets the attribute value for TRUE_NAME using the alias name TrueName.
     * @return the TRUE_NAME
     */
    public String getTrueName() {
        return (String) getAttributeInternal(TRUENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TRUE_NAME using the alias name TrueName.
     * @param value value to set the TRUE_NAME
     */
    public void setTrueName(String value) {
        setAttributeInternal(TRUENAME, value);
    }

    /**
     * Gets the attribute value for ACCOUNT_TYPE using the alias name AccountType.
     * @return the ACCOUNT_TYPE
     */
    public Integer getAccountType() {
        return (Integer) getAttributeInternal(ACCOUNTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for ACCOUNT_TYPE using the alias name AccountType.
     * @param value value to set the ACCOUNT_TYPE
     */
    public void setAccountType(Integer value) {
        setAttributeInternal(ACCOUNTTYPE, value);
    }


    /**
     * Gets the attribute value for COMPANY_ID using the alias name CompanyId.
     * @return the COMPANY_ID
     */
    public String getCompanyId() {
        return (String) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPANY_ID using the alias name CompanyId.
     * @param value value to set the COMPANY_ID
     */
    public void setCompanyId(String value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CompanyName.
     * @return the CompanyName
     */
    public String getCompanyName() {
        return (String) getAttributeInternal(COMPANYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CompanyName.
     * @param value value to set the  CompanyName
     */
    public void setCompanyName(String value) {
        setAttributeInternal(COMPANYNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link LancerResume.
     */
    public RowIterator getLancerResume() {
        return (RowIterator) getAttributeInternal(LANCERRESUME);
    }

    /**
     * Gets the view accessor <code>RowSet</code> LocationCountryVVO1.
     */
    public RowSet getLocationCountryVVO1() {
        return (RowSet) getAttributeInternal(LOCATIONCOUNTRYVVO1);
    }
}

