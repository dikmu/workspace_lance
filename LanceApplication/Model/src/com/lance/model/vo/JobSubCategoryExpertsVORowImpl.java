package com.lance.model.vo;

import com.zngh.platform.front.core.model.BaseEntityImpl;
import com.zngh.platform.front.core.model.BaseViewRowImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 03 15:51:17 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobSubCategoryExpertsVORowImpl extends BaseViewRowImpl {
    public static final int ENTITY_JOBSUBCATEGORYEXPERTSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Uuid,
        SubCategoryId,
        Name,
        Description,
        UserName,
        Rank,
        Approval,
        Type,
        CreateBy,
        CreateOn,
        ModifyBy,
        ModifyOn,
        Version;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int UUID = AttributesEnum.Uuid.index();
    public static final int SUBCATEGORYID = AttributesEnum.SubCategoryId.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int RANK = AttributesEnum.Rank.index();
    public static final int APPROVAL = AttributesEnum.Approval.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int CREATEBY = AttributesEnum.CreateBy.index();
    public static final int CREATEON = AttributesEnum.CreateOn.index();
    public static final int MODIFYBY = AttributesEnum.ModifyBy.index();
    public static final int MODIFYON = AttributesEnum.ModifyOn.index();
    public static final int VERSION = AttributesEnum.Version.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobSubCategoryExpertsVORowImpl() {
    }

    /**
     * Gets JobSubCategoryExpertsEO entity object.
     * @return the JobSubCategoryExpertsEO
     */
    public BaseEntityImpl getJobSubCategoryExpertsEO() {
        return (BaseEntityImpl) getEntity(ENTITY_JOBSUBCATEGORYEXPERTSEO);
    }

    /**
     * Gets the attribute value for UUID using the alias name Uuid.
     * @return the UUID
     */
    public String getUuid() {
        return (String) getAttributeInternal(UUID);
    }

    /**
     * Sets <code>value</code> as attribute value for UUID using the alias name Uuid.
     * @param value value to set the UUID
     */
    public void setUuid(String value) {
        setAttributeInternal(UUID, value);
    }

    /**
     * Gets the attribute value for SUB_CATEGORY_ID using the alias name SubCategoryId.
     * @return the SUB_CATEGORY_ID
     */
    public String getSubCategoryId() {
        return (String) getAttributeInternal(SUBCATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_CATEGORY_ID using the alias name SubCategoryId.
     * @param value value to set the SUB_CATEGORY_ID
     */
    public void setSubCategoryId(String value) {
        setAttributeInternal(SUBCATEGORYID, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name Name.
     * @return the NAME
     */
    public String getName() {
        return (String) getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name Name.
     * @param value value to set the NAME
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for USER_NAME using the alias name UserName.
     * @return the USER_NAME
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_NAME using the alias name UserName.
     * @param value value to set the USER_NAME
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for RANK using the alias name Rank.
     * @return the RANK
     */
    public BigDecimal getRank() {
        return (BigDecimal) getAttributeInternal(RANK);
    }

    /**
     * Sets <code>value</code> as attribute value for RANK using the alias name Rank.
     * @param value value to set the RANK
     */
    public void setRank(BigDecimal value) {
        setAttributeInternal(RANK, value);
    }

    /**
     * Gets the attribute value for APPROVAL using the alias name Approval.
     * @return the APPROVAL
     */
    public String getApproval() {
        return (String) getAttributeInternal(APPROVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for APPROVAL using the alias name Approval.
     * @param value value to set the APPROVAL
     */
    public void setApproval(String value) {
        setAttributeInternal(APPROVAL, value);
    }

    /**
     * Gets the attribute value for TYPE using the alias name Type.
     * @return the TYPE
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE using the alias name Type.
     * @param value value to set the TYPE
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for CREATE_BY using the alias name CreateBy.
     * @return the CREATE_BY
     */
    public String getCreateBy() {
        return (String) getAttributeInternal(CREATEBY);
    }

    /**
     * Gets the attribute value for CREATE_ON using the alias name CreateOn.
     * @return the CREATE_ON
     */
    public Timestamp getCreateOn() {
        return (Timestamp) getAttributeInternal(CREATEON);
    }

    /**
     * Gets the attribute value for MODIFY_BY using the alias name ModifyBy.
     * @return the MODIFY_BY
     */
    public String getModifyBy() {
        return (String) getAttributeInternal(MODIFYBY);
    }

    /**
     * Gets the attribute value for MODIFY_ON using the alias name ModifyOn.
     * @return the MODIFY_ON
     */
    public Timestamp getModifyOn() {
        return (Timestamp) getAttributeInternal(MODIFYON);
    }

    /**
     * Gets the attribute value for VERSION using the alias name Version.
     * @return the VERSION
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }
}

