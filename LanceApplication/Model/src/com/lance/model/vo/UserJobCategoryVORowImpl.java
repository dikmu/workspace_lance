package com.lance.model.vo;

import com.zngh.platform.front.core.model.BaseEntityImpl;
import com.zngh.platform.front.core.model.BaseViewRowImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Apr 03 16:03:15 CST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UserJobCategoryVORowImpl extends BaseViewRowImpl {

    public static final int ENTITY_USERJOBCATEGORYEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Uuid,
        CategoryId,
        SubCategoryId,
        UserName,
        Subscribe,
        InDuty,
        CreateBy,
        CreateOn,
        ModifyBy,
        ModifyOn,
        Version;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int UUID = AttributesEnum.Uuid.index();
    public static final int CATEGORYID = AttributesEnum.CategoryId.index();
    public static final int SUBCATEGORYID = AttributesEnum.SubCategoryId.index();
    public static final int USERNAME = AttributesEnum.UserName.index();
    public static final int SUBSCRIBE = AttributesEnum.Subscribe.index();
    public static final int INDUTY = AttributesEnum.InDuty.index();
    public static final int CREATEBY = AttributesEnum.CreateBy.index();
    public static final int CREATEON = AttributesEnum.CreateOn.index();
    public static final int MODIFYBY = AttributesEnum.ModifyBy.index();
    public static final int MODIFYON = AttributesEnum.ModifyOn.index();
    public static final int VERSION = AttributesEnum.Version.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UserJobCategoryVORowImpl() {
    }

    /**
     * Gets UserJobCategoryEO entity object.
     * @return the UserJobCategoryEO
     */
    public BaseEntityImpl getUserJobCategoryEO() {
        return (BaseEntityImpl) getEntity(ENTITY_USERJOBCATEGORYEO);
    }

    /**
     * Gets the attribute value for UUID using the alias name Uuid.
     * @return the UUID
     */
    public String getUuid() {
        return (String) getAttributeInternal(UUID);
    }

    /**
     * Sets <code>value</code> as attribute value for UUID using the alias name Uuid.
     * @param value value to set the UUID
     */
    public void setUuid(String value) {
        setAttributeInternal(UUID, value);
    }

    /**
     * Gets the attribute value for CATEGORY_ID using the alias name CategoryId.
     * @return the CATEGORY_ID
     */
    public String getCategoryId() {
        return (String) getAttributeInternal(CATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY_ID using the alias name CategoryId.
     * @param value value to set the CATEGORY_ID
     */
    public void setCategoryId(String value) {
        setAttributeInternal(CATEGORYID, value);
    }

    /**
     * Gets the attribute value for SUB_CATEGORY_ID using the alias name SubCategoryId.
     * @return the SUB_CATEGORY_ID
     */
    public String getSubCategoryId() {
        return (String) getAttributeInternal(SUBCATEGORYID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUB_CATEGORY_ID using the alias name SubCategoryId.
     * @param value value to set the SUB_CATEGORY_ID
     */
    public void setSubCategoryId(String value) {
        setAttributeInternal(SUBCATEGORYID, value);
    }

    /**
     * Gets the attribute value for USER_NAME using the alias name UserName.
     * @return the USER_NAME
     */
    public String getUserName() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_NAME using the alias name UserName.
     * @param value value to set the USER_NAME
     */
    public void setUserName(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for SUBSCRIBE using the alias name Subscribe.
     * @return the SUBSCRIBE
     */
    public String getSubscribe() {
        return (String) getAttributeInternal(SUBSCRIBE);
    }

    /**
     * Sets <code>value</code> as attribute value for SUBSCRIBE using the alias name Subscribe.
     * @param value value to set the SUBSCRIBE
     */
    public void setSubscribe(String value) {
        setAttributeInternal(SUBSCRIBE, value);
    }

    /**
     * Gets the attribute value for IN_DUTY using the alias name InDuty.
     * @return the IN_DUTY
     */
    public String getInDuty() {
        return (String) getAttributeInternal(INDUTY);
    }

    /**
     * Sets <code>value</code> as attribute value for IN_DUTY using the alias name InDuty.
     * @param value value to set the IN_DUTY
     */
    public void setInDuty(String value) {
        setAttributeInternal(INDUTY, value);
    }

    /**
     * Gets the attribute value for CREATE_BY using the alias name CreateBy.
     * @return the CREATE_BY
     */
    public String getCreateBy() {
        return (String) getAttributeInternal(CREATEBY);
    }


    /**
     * Gets the attribute value for CREATE_ON using the alias name CreateOn.
     * @return the CREATE_ON
     */
    public Timestamp getCreateOn() {
        return (Timestamp) getAttributeInternal(CREATEON);
    }


    /**
     * Gets the attribute value for MODIFY_BY using the alias name ModifyBy.
     * @return the MODIFY_BY
     */
    public String getModifyBy() {
        return (String) getAttributeInternal(MODIFYBY);
    }


    /**
     * Gets the attribute value for MODIFY_ON using the alias name ModifyOn.
     * @return the MODIFY_ON
     */
    public Timestamp getModifyOn() {
        return (Timestamp) getAttributeInternal(MODIFYON);
    }


    /**
     * Gets the attribute value for VERSION using the alias name Version.
     * @return the VERSION
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }

}

