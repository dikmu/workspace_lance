SET SQLBLANKLINES ON
CREATE TABLESPACE SYSAUX 
    DATAFILE 
        'E:\APPS\ORACLEXE\ORADATA\XE\SYSAUX.DBF' SIZE 503316480 AUTOEXTEND ON NEXT 1280 MAXSIZE 34359721984 
    BLOCKSIZE 8192 
    DEFAULT NOCOMPRESS 
    ONLINE 
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TABLESPACE SYSTEM 
    DATAFILE 
        'E:\APPS\ORACLEXE\ORADATA\XE\SYSTEM.DBF' SIZE 367001600 AUTOEXTEND ON NEXT 1280 MAXSIZE 629145600 
    BLOCKSIZE 8192 
    DEFAULT NOCOMPRESS 
    ONLINE 
    SEGMENT SPACE MANAGEMENT MANUAL 
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TEMPORARY TABLESPACE TEMP 
    TEMPFILE 
        'E:\APPS\ORACLEXE\ORADATA\XE\TEMP.DBF' SIZE 20971520 AUTOEXTEND ON NEXT 80 MAXSIZE 34359721984 
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1048576;

CREATE UNDO TABLESPACE UNDO 
    DATAFILE 
        'E:\APPS\ORACLEXE\ORADATA\XE\UNDO.DBF' SIZE 94371840 AUTOEXTEND ON NEXT 640 MAXSIZE 524288000 
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE 
    RETENTION NOGUARANTEE;

CREATE TABLESPACE USERS 
    DATAFILE 
        'E:\APPS\ORACLEXE\ORADATA\XE\USERS.DBF' SIZE 1300234240 AUTOEXTEND ON NEXT 1280 MAXSIZE 5368709120 
    BLOCKSIZE 8192 
    DEFAULT NOCOMPRESS 
    ONLINE 
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE;

CREATE TABLE BG_NAVGATION 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PARENT_ID VARCHAR2(32 BYTE) 
, NAME VARCHAR2(120 BYTE) 
, DESCRIPTION VARCHAR2(200 BYTE) 
, NAV_LEVEL NUMBER 
, URL VARCHAR2(500 BYTE) 
, ICON1 VARCHAR2(200 BYTE) 
, ICON2 VARCHAR2(200 BYTE) 
, ICON3 VARCHAR2(200 BYTE) 
, SHOW_ORDER NUMBER 
, TARGET NUMBER 
, DELETED NUMBER 
, SYS_KEY VARCHAR2(32 BYTE) 
, CREATE_BY VARCHAR2(32 BYTE) 
, CREATE_ON DATE 
, UPDATE_BY VARCHAR2(32 BYTE) 
, UPDATE_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE COMPANY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, NAME VARCHAR2(300 BYTE) 
, ENTERPRISE_PROPERTY VARCHAR2(32 BYTE) 
, EMPLOYEE_NUMBER_GRADE NUMBER 
, FOUND_YEAR DATE 
, ABOUT_COMPANY VARCHAR2(2100 BYTE) 
, SERVICE_DESC VARCHAR2(2100 BYTE) 
, VIDEO VARCHAR2(600 BYTE) 
, LOGO VARCHAR2(600 BYTE) 
, LOCATION_COUNTRY VARCHAR2(32 BYTE) 
, LOCATION_PROVINCE VARCHAR2(32 BYTE) 
, LOCATION_CITY VARCHAR2(32 BYTE) 
, LOCATION_DESC VARCHAR2(1200 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE CONTRACT 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PROJECT_ID VARCHAR2(32 BYTE) 
, TITLE VARCHAR2(60 BYTE) 
, CONTENT CLOB 
, ATTACHMENT_LINK VARCHAR2(600 BYTE) 
, CLIENT_NAME VARCHAR2(60 BYTE) 
, CLIENT_SIGN_BY VARCHAR2(20 BYTE) 
, CLIENT_TRUE_NAME VARCHAR2(60 BYTE) 
, CLIENT_COMPANY_NAME VARCHAR2(60 BYTE) 
, CLIENT_COMPANY_ID VARCHAR2(32 BYTE) 
, CLIENT_ID_NO VARCHAR2(50 BYTE) 
, CLIENT_ID_TYPE VARCHAR2(20 BYTE) 
, CLIENT_EMAIL VARCHAR2(100 BYTE) 
, CLIENT_PHONE VARCHAR2(50 BYTE) 
, LANCER_NAME VARCHAR2(60 BYTE) 
, LANCER_SIGN_BY VARCHAR2(20 BYTE) 
, LANCER_TRUE_NAME VARCHAR2(60 BYTE) 
, LANCER_COMPANY_NAME VARCHAR2(60 BYTE) 
, LANCER_COMPANY_ID VARCHAR2(32 BYTE) 
, LANCER_ID_NO VARCHAR2(50 BYTE) 
, LANCER_ID_TYPE VARCHAR2(20 BYTE) 
, LANCER_EMAIL VARCHAR2(100 BYTE) 
, LANCER_PHONE VARCHAR2(50 BYTE) 
, DATE_START DATE 
, DATE_END DATE 
, CLIENT_ROLE_TITLE VARCHAR2(120 BYTE) 
, LANCER_ROLE_TITLE VARCHAR2(120 BYTE) 
, POSTFORM VARCHAR2(20 BYTE) 
, HOURLY_PAY NUMBER 
, WEEKLY_HOURS NUMBER 
, FIXED_PAY_PRICE NUMBER 
, CLIENT_CONFIRM_DELAY_DAY NUMBER 
, CLIENT_PAY_DELAY_DAY NUMBER 
, FIXED_PAY_DATE NUMBER 
, FIXED_PAY_DELAY_HOLIDAY VARCHAR2(10 BYTE) 
, NEED_DAILY_REPORT VARCHAR2(10 BYTE) 
, PROCESS_STATUS VARCHAR2(20 BYTE) 
, PROCESS_STATUS_DESC VARCHAR2(2100 BYTE) 
, LAST_PROCESS_STATUS VARCHAR2(20 BYTE) 
, LANCER_TOTAL_SCORE NUMBER 
, LANCER_QUALITY_SCORE NUMBER 
, LANCER_PROFESS_SCORE NUMBER 
, LANCER_COST_SCORE NUMBER 
, LANCER_PLAN_SCORE NUMBER 
, LANCER_RESPONS_SCORE NUMBER 
, LANCER_EVALUATION VARCHAR2(2100 BYTE) 
, CLIENT_TOTAL_SCORE VARCHAR2(20 BYTE) 
, STATUS VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
, CONTRACT_NAME VARCHAR2(210 BYTE) 
);

CREATE TABLE CONTRACT_LOG 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PROCESS_STATUS VARCHAR2(20 BYTE) 
, LOG VARCHAR2(2100 BYTE) 
, CONTRACT_ID VARCHAR2(32 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE CONTRACT_MILESTONE 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PROJECT_ID VARCHAR2(32 BYTE) 
, CONTRACT_ID VARCHAR2(32 BYTE) 
, TITLE VARCHAR2(60 BYTE) 
, LOCATION VARCHAR2(21 BYTE) 
, REMARK VARCHAR2(2100 BYTE) 
, DATE_DELIVERY VARCHAR2(20 BYTE) 
, PRICE NUMBER 
, PROCESS VARCHAR2(20 BYTE) 
, STATUS VARCHAR2(10 BYTE) 
, PAY_STATUS VARCHAR2(20 BYTE) 
, DATE_LATEST_PAY VARCHAR2(20 BYTE) 
, PAY_BILL_NUMBER VARCHAR2(50 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE CONTRACT_REPORT 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PROJECT_ID VARCHAR2(32 BYTE) 
, CONTRACT_ID VARCHAR2(32 BYTE) 
, STATUS_NAME VARCHAR2(20 BYTE) NOT NULL 
, ADDRESS VARCHAR2(210 BYTE) NOT NULL 
, DATE_RECORD DATE NOT NULL 
, WORK_CONTENT CLOB 
, WORK_HOURS NUMBER 
, WORK_REMARK VARCHAR2(2100 BYTE) 
, STATUS VARCHAR2(20 BYTE) 
, STATUS_REMARK VARCHAR2(2100 BYTE) 
, PAY_BILL_NUMBER VARCHAR2(50 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE FIN_PAY_BILL 
(
  PAY_BILL_NUMBER VARCHAR2(50 BYTE) NOT NULL 
, PAY_USER VARCHAR2(60 BYTE) 
, PAY_AMOUNT NUMBER 
, RECEIVE_USER VARCHAR2(60 BYTE) 
, RECEIVE_AMOUNT NUMBER 
, FEES NUMBER 
, PAY_TIME VARCHAR2(20 BYTE) 
, STATUS VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE FIN_USER_ACCOUNT 
(
  USER_NAME VARCHAR2(60 BYTE) NOT NULL 
, TEMP_AVALIABLE_AMOUNT NUMBER 
, REAL_AVALIABLE_AMOUNT NUMBER 
, TOTAL_RECEIVE_AMOUNT NUMBER 
, TOTAL_AMOUNT NUMBER 
, STATUS VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE FIN_USER_ACCOUNT_CHARGE_LOG 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(60 BYTE) 
, BANK_BILL_NUMBER VARCHAR2(60 CHAR) 
, MOVE_TARGET VARCHAR2(60 BYTE) 
, MOVE_DIRECTION VARCHAR2(20 BYTE) 
, MOVE_AMOUNT NUMBER 
, OTHER_FEE NUMBER 
, AFTER_REAL_AVALIABLE_AMOUNT NUMBER 
, BEFORE_REAL_AVALIABLE_AMOUNT NUMBER 
, DESCRIPTION VARCHAR2(2100 CHAR) 
, SUCCESS VARCHAR2(20 BYTE) 
, PAY_ON DATE 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE JOB_CATEGORY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, NAME_EN VARCHAR2(100 BYTE) 
, NAME_CN VARCHAR2(300 BYTE) 
, DISPLAY VARCHAR2(1 BYTE) 
, DESCRIPTION VARCHAR2(1200 CHAR) 
, APPLY_REASON VARCHAR2(900 CHAR) 
, REJECT_REASON VARCHAR2(900 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE JOB_SUB_CATEGORY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, CATEGORY_ID VARCHAR2(32 BYTE) 
, NAME VARCHAR2(50 BYTE) 
, NAME_CN VARCHAR2(20 CHAR) 
, DESCRIPTION VARCHAR2(2100 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE JOB_SUB_CATEGORY_EXPERTS 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, SUB_CATEGORY_ID VARCHAR2(32 BYTE) 
, NAME VARCHAR2(20 CHAR) 
, TYPE VARCHAR2(20 BYTE) 
, DESCRIPTION VARCHAR2(1000 CHAR) 
, USER_NAME VARCHAR2(60 BYTE) 
, RANK NUMBER 
, APPROVAL VARCHAR2(1 BYTE) 
, CREATE_BY VARCHAR2(60 CHAR) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE JOB_SUB_CATEGORY_SUBMIT 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(2100 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
, SUB_CATEGORY_ID VARCHAR2(32 BYTE) 
);

CREATE TABLE JOB_TEMPLATE 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, JOB_CATEGORY_ID VARCHAR2(32 BYTE) 
, JOB_SUB_CATEGORY_ID VARCHAR2(32 BYTE) 
, NAME_EN VARCHAR2(100 BYTE) 
, NAME_CN VARCHAR2(300 BYTE) 
, DESCRIPTION_CN CLOB 
, DESCRIPTION_EN CLOB 
, TIPS VARCHAR2(600 BYTE) 
, TYPE VARCHAR2(20 BYTE) 
, RANK NUMBER 
, IS_DEFAULT VARCHAR2(1 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE LANCE_DISCUSS 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, CONTENT VARCHAR2(2000 CHAR) 
, TYPE VARCHAR2(20 CHAR) 
, URGENT VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
, CONTACT VARCHAR2(60 CHAR) 
, PAGE_URL VARCHAR2(1000 CHAR) 
, STATUS VARCHAR2(20 CHAR) 
);

CREATE TABLE LOCATION_AREA 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, AREA_CODE VARCHAR2(10 BYTE) 
, AREA_NAME VARCHAR2(50 BYTE) 
, CITY_CODE VARCHAR2(10 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE LOCATION_CITY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, CITY_CODE VARCHAR2(10 BYTE) 
, CITY_NAME VARCHAR2(60 BYTE) 
, PROVINCE_CODE VARCHAR2(10 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE LOCATION_COUNTRY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, NAME VARCHAR2(60 BYTE) 
, ABB VARCHAR2(5 BYTE) 
, CODE VARCHAR2(10 BYTE) 
, NAME_LOC VARCHAR2(60 BYTE) 
, REGION_ID VARCHAR2(32 BYTE) 
, SHOW_ORDER NUMBER 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE LOCATION_PROVINCE 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PROVINCE_CODE VARCHAR2(10 BYTE) 
, PROVINCE_NAME VARCHAR2(30 BYTE) 
, COUNTRY_ID VARCHAR2(32 BYTE) 
, SHOW_ORDER NUMBER 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE LOCATION_REGION 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, NAME_CN VARCHAR2(60 BYTE) 
, NAME_EN VARCHAR2(60 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE LOOKUPS 
(
  ITEM_KEY VARCHAR2(500 BYTE) NOT NULL 
, ITEM_TYPE VARCHAR2(50 BYTE) NOT NULL 
, ITEM_DISPLAY VARCHAR2(500 BYTE) 
, ITEM_DESC VARCHAR2(900 BYTE) 
, DISPLAY_ORDER NUMBER 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE POST_JOBS 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, NAME VARCHAR2(60 BYTE) 
, BRIEF VARCHAR2(2100 BYTE) 
, ATTACH VARCHAR2(2000 BYTE) 
, POSTFORM VARCHAR2(20 BYTE) 
, HOURLY_PAY_MIN NUMBER 
, HOURLY_PAY_MAX NUMBER 
, WEEKLY_HOURS NUMBER 
, DURATION_MIN NUMBER 
, DURATION_MAX NUMBER 
, FIXED_PAY_MIN NUMBER 
, FIXED_PAY_MAX NUMBER 
, JOB_VISIBILITY VARCHAR2(20 BYTE) 
, ALLOW_SEARCH_ENGINES VARCHAR2(20 BYTE) 
, FIXED_LOCATION VARCHAR2(20 BYTE) 
, WORK_CATEGORY VARCHAR2(32 BYTE) 
, WORK_SUBCATEGORY VARCHAR2(32 BYTE) 
, SPECIFIC_SKILL_A VARCHAR2(120 CHAR) 
, SPECIFIC_SKILL_B VARCHAR2(120 CHAR) 
, SPECIFIC_SKILL_C VARCHAR2(120 CHAR) 
, SPECIFIC_SKILL_D VARCHAR2(120 CHAR) 
, SPECIFIC_SKILL_E VARCHAR2(120 CHAR) 
, SPECIFIC_SKILL_F VARCHAR2(120 CHAR) 
, SPECIFIC_SKILL_G VARCHAR2(120 CHAR) 
, STATUS VARCHAR2(20 BYTE) 
, STATUS_DESC VARCHAR2(2100 BYTE) 
, POST_JOB_DATE_START DATE 
, POST_JOB_DATE_END DATE 
, LOCATION_REGION VARCHAR2(32 BYTE) 
, LOCATION_COUNTRY VARCHAR2(32 BYTE) 
, LOCATION_PROVINCE VARCHAR2(32 BYTE) 
, LOCATION_CITY VARCHAR2(32 BYTE) 
, LOCATION_DESC VARCHAR2(1200 BYTE) 
, SIGN_BY VARCHAR2(20 BYTE) 
, INDEX_SKILLS VARCHAR2(2100 BYTE) 
, INDEX_WORK_CATEGORYS VARCHAR2(600 BYTE) 
, INDEX_LOCATION VARCHAR2(500 BYTE) 
, INDEX_ALL_META_INFO CLOB 
, RANK NUMBER 
, RANK_DESC VARCHAR2(2100 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, APPLY_COUNT NUMBER DEFAULT 0 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
, SUBSCRIBE_UPDATE VARCHAR2(1 BYTE) 
, SUBSCRIBE_FREQUENCY VARCHAR2(4 BYTE) 
);

CREATE TABLE POST_JOBS_SKILL 
(
  POST_JOB_ID VARCHAR2(32 BYTE) NOT NULL 
, SKILL_ID VARCHAR2(32 BYTE) NOT NULL 
, REQUIRE_LEVEL NUMBER 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE POST_JOB_DISCUSS 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, PARENT_DISCUSS_ID VARCHAR2(32 BYTE) 
, POST_JOB_ID VARCHAR2(32 BYTE) 
, CONTENT VARCHAR2(2100 BYTE) 
, IS_APPLY VARCHAR2(1 BYTE) 
, POSTFORM VARCHAR2(20 BYTE) 
, HOURLY_PAY NUMBER 
, FIXED_PAY_MIN NUMBER 
, FIXED_PAY_MAX NUMBER 
, WEEKLY_HOURS NUMBER 
, ENTERY_DATE DATE 
, SIGN_BY VARCHAR2(20 BYTE) 
, STATUS VARCHAR2(20 BYTE) 
, STATUS_LOG VARCHAR2(200 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE PROJECT 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, POST_JOB_ID VARCHAR2(32 BYTE) 
, PROJECT_NAME VARCHAR2(60 BYTE) 
, DESCRIPTION CLOB 
, PROJECT_COMPANY_ID VARCHAR2(32 BYTE) 
, PARENT_PROJECT_ID VARCHAR2(32 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE PS_TXN 
(
  ID NUMBER(20, 0) NOT NULL 
, PARENTID NUMBER(20, 0) 
, COLLID NUMBER(10, 0) NOT NULL 
, CONTENT BLOB 
, CREATION_DATE DATE DEFAULT sysdate 
);

CREATE TABLE REG_EMAIL_CHK 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(60 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
);

CREATE TABLE RETRIEVE_PASSWORD 
(
  UUID VARCHAR2(32 CHAR) NOT NULL 
, CREATE_ON DATE 
, OREATE_BY VARCHAR2(20 CHAR) 
, USER_NAME VARCHAR2(60 BYTE) NOT NULL 
);

CREATE TABLE SKILLS 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, SUPER_TYPE_ID VARCHAR2(32 BYTE) 
, NAME VARCHAR2(120 CHAR) NOT NULL 
, NAME_CN VARCHAR2(120 BYTE) 
, DESCRIPTION VARCHAR2(800 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE SKILL_SUPER_TYPE 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, NAME VARCHAR2(60 CHAR) NOT NULL 
, NAME_CN VARCHAR2(20 CHAR) 
, DESCRIPTION VARCHAR2(800 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE SPREAD_HEARD_FROM 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, TEXT VARCHAR2(2100 BYTE) 
, TYPE VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE SYS_CALENDAR 
(
  SYS_DATE_REC VARCHAR2(20 BYTE) NOT NULL 
, DAY NUMBER 
, DATE_TYPE VARCHAR2(20 BYTE) 
, SHOW_ORDER NUMBER 
, DESCRIPTION VARCHAR2(20 BYTE) 
);

CREATE TABLE USER_COMPANY_HISTORY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(50 BYTE) 
, NAME VARCHAR2(20 CHAR) NOT NULL 
, TITLE VARCHAR2(20 CHAR) 
, WORK_AREA VARCHAR2(20 CHAR) 
, CONTENT VARCHAR2(2000 CHAR) 
, START_DATE DATE 
, END_DATE DATE 
, STATUS VARCHAR2(10 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_EDUCATION 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(32 BYTE) 
, INSTITUTION_NAME VARCHAR2(30 CHAR) 
, DEGREE_TYPE VARCHAR2(30 CHAR) 
, START_DATE DATE 
, END_DATE DATE 
, PROFESSIONAL VARCHAR2(30 CHAR) 
, DESCRIPTION VARCHAR2(2000 CHAR) 
, STUDY_MARK VARCHAR2(20 CHAR) 
, CLUB_EVENTS VARCHAR2(100 CHAR) 
, ATTACH1_LINK VARCHAR2(500 CHAR) 
, ATTACH2_LINK VARCHAR2(500 CHAR) 
, ATTACH3_LINK VARCHAR2(500 CHAR) 
, TOBE_VERIFIED VARCHAR2(1 BYTE) 
, DONE_VERIFIED VARCHAR2(1 BYTE) 
, DISPLAY VARCHAR2(1 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_JOB_CATEGORY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, CATEGORY_ID VARCHAR2(32 BYTE) 
, SUB_CATEGORY_ID VARCHAR2(32 BYTE) 
, USER_NAME VARCHAR2(60 BYTE) 
, SUBSCRIBE VARCHAR2(1 BYTE) 
, IN_DUTY VARCHAR2(1 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_LICENSE 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(60 BYTE) 
, NAME VARCHAR2(20 CHAR) 
, REG_ORGANIZATION VARCHAR2(20 CHAR) 
, CONTENT VARCHAR2(1000 CHAR) 
, REG_NUMBER VARCHAR2(20 BYTE) 
, REG_ADDRESS VARCHAR2(500 CHAR) 
, START_DATE DATE 
, END_DATE DATE 
, STATUS VARCHAR2(10 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_LOCATION_LIST 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, REGION_ID VARCHAR2(32 BYTE) 
, USER_NAME VARCHAR2(60 BYTE) NOT NULL 
, COUNTRY_ID VARCHAR2(32 BYTE) 
, PROVINCE_ID VARCHAR2(32 BYTE) 
, CITY_ID VARCHAR2(32 BYTE) 
, AREA_ID VARCHAR2(32 BYTE) 
, CURRENT_IN NUMBER 
, TELPHONE VARCHAR2(20 BYTE) 
, FAX_NUMBER VARCHAR2(20 BYTE) 
, ZIP_CODE VARCHAR2(20 BYTE) 
, DETAIL_LOC VARCHAR2(100 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_NOTIFICATION 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, TITLE VARCHAR2(20 CHAR) 
, CONTENT VARCHAR2(1000 CHAR) 
, USER_NAME VARCHAR2(60 CHAR) 
, TYPE VARCHAR2(20 CHAR) 
, READ VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 CHAR) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 CHAR) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_PROJECT_HISTORY 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(60 BYTE) NOT NULL 
, NAME VARCHAR2(20 CHAR) 
, TITLE VARCHAR2(20 BYTE) 
, CONTENT VARCHAR2(2000 CHAR) 
, START_DATE DATE 
, END_DATE DATE 
, PROJECT_ADDRESS VARCHAR2(500 CHAR) 
, STATUS VARCHAR2(10 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_ROLE 
(
  NAME VARCHAR2(120 BYTE) NOT NULL 
, DISPLAY_NAME VARCHAR2(120 BYTE) 
, TYPE VARCHAR2(20 BYTE) 
, DESCRIPTION VARCHAR2(500 CHAR) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_ROLE_GRANTS 
(
  USER_NAME VARCHAR2(60 BYTE) NOT NULL 
, ROLE_NAME VARCHAR2(120 BYTE) NOT NULL 
, TYPE VARCHAR2(20 BYTE) 
, START_DATE DATE 
, END_DATE DATE 
, STATUS VARCHAR2(20 BYTE) 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_ROLE_GRANTS_LOG 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(60 BYTE) 
, ROLE_NAME VARCHAR2(120 BYTE) 
, TYPE VARCHAR2(20 BYTE) 
, START_DATE DATE 
, END_DATE DATE 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_SKILL 
(
  UUID VARCHAR2(32 BYTE) NOT NULL 
, USER_NAME VARCHAR2(32 BYTE) 
, NAME VARCHAR2(150 BYTE) 
, DISPLAY NUMBER 
, SHOW_ORDER NUMBER 
, MASTER_LEVEL NUMBER 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE USER_WATCH_LIST 
(
  USER_NAME VARCHAR2(60 CHAR) NOT NULL 
, WATCH_USER_NAME VARCHAR2(60 CHAR) 
, POST_JOB_ID VARCHAR2(32 BYTE) NOT NULL 
, NOTE VARCHAR2(200 CHAR) 
, TYPE VARCHAR2(20 CHAR) 
, CREATE_BY VARCHAR2(60 CHAR) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 CHAR) 
, MODIFY_ON DATE 
, VERSION NUMBER 
);

CREATE TABLE U_USER 
(
  USER_NAME VARCHAR2(60 BYTE) NOT NULL 
, TRUE_NAME VARCHAR2(60 BYTE) 
, DISPLAY_NAME VARCHAR2(60 BYTE) 
, EMAIL VARCHAR2(100 BYTE) 
, IDENTITY_NO VARCHAR2(50 BYTE) 
, IDENTITY_TYPE VARCHAR2(500 BYTE) 
, PASSWORD VARCHAR2(100 BYTE) 
, IMG VARCHAR2(600 BYTE) 
, COUNTRY VARCHAR2(32 BYTE) 
, COMPANY_ID VARCHAR2(32 BYTE) 
, PHONE_NUMBER VARCHAR2(50 BYTE) 
, ATTACH VARCHAR2(600 BYTE) 
, JOB_TITLE VARCHAR2(150 BYTE) 
, VIDEO VARCHAR2(600 BYTE) 
, DESCRIPTION CLOB 
, WEBSITE_URL VARCHAR2(600 BYTE) 
, IM_NUMBER_A VARCHAR2(60 BYTE) 
, IM_TYPE_A VARCHAR2(60 BYTE) 
, IM_NUMBER_B VARCHAR2(60 BYTE) 
, IM_TYPE_B VARCHAR2(60 BYTE) 
, IM_NUMBER_C VARCHAR2(60 BYTE) 
, IM_TYPE_C VARCHAR2(60 BYTE) 
, LOCATION_A VARCHAR2(32 BYTE) 
, LOCATION_A_REGION VARCHAR2(32 BYTE) 
, LOCATION_A_COUNTRY VARCHAR2(32 BYTE) 
, LOCATION_A_PROVINCE VARCHAR2(32 BYTE) 
, LOCATION_A_CITY VARCHAR2(32 BYTE) 
, LOCATION_A_DETAIL VARCHAR2(32 BYTE) 
, LOCATION_A_INDEX VARCHAR2(500 BYTE) 
, LOCATION_B VARCHAR2(32 BYTE) 
, LOCATION_B_REGION VARCHAR2(32 BYTE) 
, LOCATION_B_COUNTRY VARCHAR2(32 BYTE) 
, LOCATION_B_PROVINCE VARCHAR2(32 BYTE) 
, LOCATION_B_CITY VARCHAR2(32 BYTE) 
, LOCATION_B_DETAIL VARCHAR2(32 BYTE) 
, LOCATION_B_INDEX VARCHAR2(500 BYTE) 
, TAGLINE VARCHAR2(600 BYTE) 
, HOURLY_RATE NUMBER 
, CHARGE_RATE NUMBER 
, OVERVIEW VARCHAR2(3000 BYTE) 
, SERVICE_DESCRIPTION CLOB 
, PAYMENT_TERMS CLOB 
, KEYWORDS VARCHAR2(600 BYTE) 
, ADDRESS_DISPLAY VARCHAR2(20 BYTE) 
, CONTACT_INFO VARCHAR2(20 BYTE) 
, LAST_LOGIN_TIME DATE 
, CAN_BE_SEARCH NUMBER 
, DEFAULT_ROLE VARCHAR2(20 BYTE) 
, RANK NUMBER 
, RANK_DESC VARCHAR2(2100 BYTE) 
, INDEX_ALL CLOB 
, CREATE_BY VARCHAR2(60 BYTE) 
, CREATE_ON DATE 
, MODIFY_BY VARCHAR2(60 BYTE) 
, MODIFY_ON DATE 
, VERSION NUMBER 
, STATUS VARCHAR2(20 BYTE) 
, WORK_STATUS VARCHAR2(20 BYTE) 
, INDEX_SKILL VARCHAR2(1200 BYTE) 
, REFERRER VARCHAR2(60 BYTE) 
, SUBSCRIBE_UPDATE VARCHAR2(1 BYTE) 
, SUBSCRIBE_FREQUENCY VARCHAR2(4 BYTE) 
);

CREATE UNIQUE INDEX NAVGATION_PK ON BG_NAVGATION (UUID ASC);

CREATE UNIQUE INDEX CLIENT_COMPANY_PK ON COMPANY (UUID ASC);

CREATE UNIQUE INDEX CLIENT_COMPANY_PK ON COMPANY (UUID ASC);

CREATE UNIQUE INDEX CONTRACT_PK ON CONTRACT (UUID ASC);

CREATE UNIQUE INDEX CONTRACT_LOG_PK ON CONTRACT_LOG (UUID ASC);

CREATE UNIQUE INDEX CONTRACT_LOG_PK ON CONTRACT_LOG (UUID ASC);

CREATE UNIQUE INDEX POST_JOB_MILESTONE_PK ON CONTRACT_MILESTONE (UUID ASC);

CREATE UNIQUE INDEX CONTRACT_PK ON CONTRACT (UUID ASC);

CREATE UNIQUE INDEX CONTRACT_REPORT_PK ON CONTRACT_REPORT (UUID ASC);

CREATE UNIQUE INDEX CONTRACT_REPORT_PK ON CONTRACT_REPORT (UUID ASC);

CREATE UNIQUE INDEX FIN_ACCOUNT_LOG_PK ON FIN_USER_ACCOUNT_CHARGE_LOG (UUID ASC);

CREATE UNIQUE INDEX PAY_NUMBER_PK ON FIN_PAY_BILL (PAY_BILL_NUMBER ASC);

CREATE UNIQUE INDEX FIN_USER_ACCOUNT_PK ON FIN_USER_ACCOUNT (USER_NAME ASC);

CREATE UNIQUE INDEX FIN_ACCOUNT_LOG_PK ON FIN_USER_ACCOUNT_CHARGE_LOG (UUID ASC);

CREATE UNIQUE INDEX FIN_USER_ACCOUNT_PK ON FIN_USER_ACCOUNT (USER_NAME ASC);

CREATE UNIQUE INDEX JOB_CATEGORY_PK ON JOB_CATEGORY (UUID ASC);

CREATE UNIQUE INDEX JOB_CATEGORY_PK ON JOB_CATEGORY (UUID ASC);

CREATE UNIQUE INDEX JOB_SUB_CATEGORY_PK ON JOB_SUB_CATEGORY (UUID ASC);

CREATE UNIQUE INDEX JOB_SUB_CATEGORY_EXPERTS_PK ON JOB_SUB_CATEGORY_EXPERTS (UUID ASC);

CREATE UNIQUE INDEX JOB_SUB_CATEGORY_EXPERTS_PK ON JOB_SUB_CATEGORY_EXPERTS (UUID ASC);

CREATE UNIQUE INDEX JOB_SUB_CATEGORY_HIS_PK ON JOB_SUB_CATEGORY_SUBMIT (UUID ASC);

CREATE UNIQUE INDEX JOB_SUB_CATEGORY_PK ON JOB_SUB_CATEGORY (UUID ASC);

CREATE UNIQUE INDEX JOB_SUB_CATEGORY_HIS_PK ON JOB_SUB_CATEGORY_SUBMIT (UUID ASC);

CREATE UNIQUE INDEX JOB_TEMPLATE_PK ON JOB_TEMPLATE (UUID ASC);

CREATE UNIQUE INDEX JOB_TEMPLATE_PK ON JOB_TEMPLATE (UUID ASC);

CREATE UNIQUE INDEX LANCE_DISCUSS_PK ON LANCE_DISCUSS (UUID ASC);

CREATE UNIQUE INDEX LANCE_DISCUSS_PK ON LANCE_DISCUSS (UUID ASC);

CREATE UNIQUE INDEX LOCATION_AREA_PK ON LOCATION_AREA (UUID ASC);

CREATE UNIQUE INDEX LOCATION_AREA_PK ON LOCATION_AREA (UUID ASC);

CREATE UNIQUE INDEX LOCATION_CITY_PK ON LOCATION_CITY (UUID ASC);

CREATE UNIQUE INDEX LOCATION_CITY_PK ON LOCATION_CITY (UUID ASC);

CREATE INDEX LOCATION_COUNTRY_INDEX1 ON LOCATION_COUNTRY (SHOW_ORDER ASC);

CREATE INDEX LOCATION_COUNTRY_INDEX2 ON LOCATION_COUNTRY (NAME ASC);

CREATE UNIQUE INDEX LOCATION_COUNTRY_PK ON LOCATION_COUNTRY (UUID ASC);

CREATE INDEX LOCATION_COUNTRY_INDEX1 ON LOCATION_COUNTRY (SHOW_ORDER ASC);

CREATE INDEX LOCATION_COUNTRY_INDEX2 ON LOCATION_COUNTRY (NAME ASC);

CREATE UNIQUE INDEX LOCATION_COUNTRY_PK ON LOCATION_COUNTRY (UUID ASC);

CREATE UNIQUE INDEX LOCATION_PROVINCE_PK ON LOCATION_PROVINCE (UUID ASC);

CREATE UNIQUE INDEX LOCATION_PROVINCE_PK ON LOCATION_PROVINCE (UUID ASC);

CREATE UNIQUE INDEX LOCATION_REGION_PK ON LOCATION_REGION (UUID ASC);

CREATE UNIQUE INDEX LOCATION_REGION_PK ON LOCATION_REGION (UUID ASC);

CREATE UNIQUE INDEX LOOKUPS_PK ON LOOKUPS (ITEM_KEY ASC, ITEM_TYPE ASC);

CREATE UNIQUE INDEX LOOKUPS_PK1 ON LOOKUPS (ITEM_KEY ASC);

CREATE UNIQUE INDEX LOOKUPS_PK ON LOOKUPS (ITEM_KEY ASC, ITEM_TYPE ASC);

CREATE UNIQUE INDEX LOOKUPS_PK1 ON LOOKUPS (ITEM_KEY ASC);

CREATE UNIQUE INDEX MAIL_PK ON USER_NOTIFICATION (UUID ASC);

CREATE UNIQUE INDEX NAVGATION_PK ON BG_NAVGATION (UUID ASC);

CREATE UNIQUE INDEX PAY_NUMBER_PK ON FIN_PAY_BILL (PAY_BILL_NUMBER ASC);

CREATE UNIQUE INDEX POST_JOBS_PK ON POST_JOBS (UUID ASC);

CREATE INDEX SEARCH_JOBS_INDEX1 ON POST_JOBS (STATUS ASC, JOB_VISIBILITY ASC, WORK_CATEGORY ASC, WORK_SUBCATEGORY ASC, POSTFORM ASC, INDEX_LOCATION ASC, INDEX_SKILLS ASC, FIXED_PAY_MIN ASC, FIXED_PAY_MAX ASC, HOURLY_PAY_MIN ASC, HOURLY_PAY_MAX ASC, CREATE_ON ASC, POST_JOB_DATE_END ASC);

CREATE UNIQUE INDEX POST_JOBS_PK ON POST_JOBS (UUID ASC);

CREATE UNIQUE INDEX POST_JOBS_SKILL_PK ON POST_JOBS_SKILL (POST_JOB_ID ASC, SKILL_ID ASC);

CREATE UNIQUE INDEX POST_JOBS_SKILL_PK ON POST_JOBS_SKILL (POST_JOB_ID ASC, SKILL_ID ASC);

CREATE UNIQUE INDEX POST_JOB_DISCUSS_PK ON POST_JOB_DISCUSS (UUID ASC);

CREATE UNIQUE INDEX POST_JOB_DISCUSS_PK ON POST_JOB_DISCUSS (UUID ASC);

CREATE UNIQUE INDEX POST_JOB_MILESTONE_PK ON CONTRACT_MILESTONE (UUID ASC);

CREATE UNIQUE INDEX PROJECT_PK ON PROJECT (UUID ASC);

CREATE UNIQUE INDEX PROJECT_PK ON PROJECT (UUID ASC);

CREATE INDEX PS_TXN_IDX ON PS_TXN (COLLID ASC, ID ASC);

CREATE INDEX PS_TXN_IDX ON PS_TXN (COLLID ASC, ID ASC);

CREATE UNIQUE INDEX REG_EMAIL_CHK_PK ON REG_EMAIL_CHK (UUID ASC);

CREATE UNIQUE INDEX REG_EMAIL_CHK_PK ON REG_EMAIL_CHK (UUID ASC);

CREATE UNIQUE INDEX RETRIEVE_PASSWORD_PK ON RETRIEVE_PASSWORD (UUID ASC);

CREATE UNIQUE INDEX RETRIEVE_PASSWORD_PK ON RETRIEVE_PASSWORD (UUID ASC);

CREATE INDEX SEARCH_JOBS_INDEX1 ON POST_JOBS (STATUS ASC, JOB_VISIBILITY ASC, WORK_CATEGORY ASC, WORK_SUBCATEGORY ASC, POSTFORM ASC, INDEX_LOCATION ASC, INDEX_SKILLS ASC, FIXED_PAY_MIN ASC, FIXED_PAY_MAX ASC, HOURLY_PAY_MIN ASC, HOURLY_PAY_MAX ASC, CREATE_ON ASC, POST_JOB_DATE_END ASC);

CREATE INDEX SEARCH_USER_INDEX1 ON U_USER (STATUS ASC, DEFAULT_ROLE ASC, LOCATION_A_INDEX ASC, LOCATION_B_INDEX ASC, INDEX_SKILL ASC, CHARGE_RATE ASC, HOURLY_RATE ASC);

CREATE UNIQUE INDEX SKILLS_PK ON SKILLS (UUID ASC);

CREATE UNIQUE INDEX SKILLS_PK ON SKILLS (UUID ASC);

CREATE UNIQUE INDEX SKILL_SUPER_TYPE_PK ON SKILL_SUPER_TYPE (UUID ASC);

CREATE UNIQUE INDEX SKILL_SUPER_TYPE_PK ON SKILL_SUPER_TYPE (UUID ASC);

CREATE UNIQUE INDEX SPREAD_HEARD_FROM_PK ON SPREAD_HEARD_FROM (UUID ASC);

CREATE UNIQUE INDEX SPREAD_HEARD_FROM_PK ON SPREAD_HEARD_FROM (UUID ASC);

CREATE UNIQUE INDEX SYS_CALENDAR_PK ON SYS_CALENDAR (SYS_DATE_REC ASC);

CREATE UNIQUE INDEX SYS_CALENDAR_PK ON SYS_CALENDAR (SYS_DATE_REC ASC);

CREATE UNIQUE INDEX USER_COMPANY_HISTORY_PK ON USER_COMPANY_HISTORY (UUID ASC);

CREATE UNIQUE INDEX USER_COMPANY_HISTORY_PK ON USER_COMPANY_HISTORY (UUID ASC);

CREATE UNIQUE INDEX USER_EDUCATION_PK ON USER_EDUCATION (UUID ASC);

CREATE UNIQUE INDEX USER_EDUCATION_PK ON USER_EDUCATION (UUID ASC);

CREATE UNIQUE INDEX USER_JOB_CATEGORY_PK ON USER_JOB_CATEGORY (UUID ASC);

CREATE UNIQUE INDEX USER_JOB_CATEGORY_PK ON USER_JOB_CATEGORY (UUID ASC);

CREATE UNIQUE INDEX USER_LESSIONS_PK ON USER_LICENSE (UUID ASC);

CREATE UNIQUE INDEX USER_LESSIONS_PK ON USER_LICENSE (UUID ASC);

CREATE UNIQUE INDEX USER_LOCATION_LIST_PK ON USER_LOCATION_LIST (UUID ASC);

CREATE UNIQUE INDEX USER_LOCATION_LIST_PK ON USER_LOCATION_LIST (UUID ASC);

CREATE UNIQUE INDEX MAIL_PK ON USER_NOTIFICATION (UUID ASC);

CREATE UNIQUE INDEX USER_WORK_HISTORY_PK ON USER_PROJECT_HISTORY (UUID ASC);

CREATE UNIQUE INDEX USER_ROLE_PK ON USER_ROLE (NAME ASC);

CREATE UNIQUE INDEX USER_ROLE_GRANTS_PK ON USER_ROLE_GRANTS (USER_NAME ASC, ROLE_NAME ASC);

CREATE UNIQUE INDEX USER_ROLE_GRANTS_LOG_PK ON USER_ROLE_GRANTS_LOG (UUID ASC);

CREATE UNIQUE INDEX USER_ROLE_GRANTS_LOG_PK ON USER_ROLE_GRANTS_LOG (UUID ASC);

CREATE UNIQUE INDEX USER_ROLE_GRANTS_PK ON USER_ROLE_GRANTS (USER_NAME ASC, ROLE_NAME ASC);

CREATE UNIQUE INDEX USER_ROLE_PK ON USER_ROLE (NAME ASC);

CREATE UNIQUE INDEX USER_SKILL_PK ON USER_SKILL (UUID ASC);

CREATE UNIQUE INDEX USER_SKILL_PK ON USER_SKILL (UUID ASC);

CREATE UNIQUE INDEX USER_WATCH_LIST_PK ON USER_WATCH_LIST (USER_NAME ASC);

CREATE UNIQUE INDEX USER_WATCH_LIST_PK ON USER_WATCH_LIST (USER_NAME ASC);

CREATE UNIQUE INDEX USER_WORK_HISTORY_PK ON USER_PROJECT_HISTORY (UUID ASC);

CREATE INDEX SEARCH_USER_INDEX1 ON U_USER (STATUS ASC, DEFAULT_ROLE ASC, LOCATION_A_INDEX ASC, LOCATION_B_INDEX ASC, INDEX_SKILL ASC, CHARGE_RATE ASC, HOURLY_RATE ASC);

CREATE UNIQUE INDEX U_USER_EMAIL_IDX ON U_USER (EMAIL ASC);

CREATE UNIQUE INDEX U_USER_PK ON U_USER (USER_NAME ASC);

CREATE UNIQUE INDEX U_USER_EMAIL_IDX ON U_USER (EMAIL ASC);

CREATE UNIQUE INDEX U_USER_PK ON U_USER (USER_NAME ASC);

ALTER TABLE BG_NAVGATION
ADD CONSTRAINT NAVGATION_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX NAVGATION_PK
ENABLE;

ALTER TABLE COMPANY
ADD CONSTRAINT CLIENT_COMPANY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX CLIENT_COMPANY_PK
ENABLE;

ALTER TABLE CONTRACT
ADD CONSTRAINT CONTRACT_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX CONTRACT_PK
ENABLE;

ALTER TABLE CONTRACT_LOG
ADD CONSTRAINT CONTRACT_LOG_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX CONTRACT_LOG_PK
ENABLE;

ALTER TABLE CONTRACT_MILESTONE
ADD CONSTRAINT POST_JOB_MILESTONE_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX POST_JOB_MILESTONE_PK
ENABLE;

ALTER TABLE CONTRACT_REPORT
ADD CONSTRAINT CONTRACT_REPORT_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX CONTRACT_REPORT_PK
ENABLE;

ALTER TABLE FIN_PAY_BILL
ADD CONSTRAINT PAY_NUMBER_PK PRIMARY KEY 
(
  PAY_BILL_NUMBER 
)
USING INDEX PAY_NUMBER_PK
ENABLE;

ALTER TABLE FIN_USER_ACCOUNT
ADD CONSTRAINT FIN_USER_ACCOUNT_PK PRIMARY KEY 
(
  USER_NAME 
)
USING INDEX FIN_USER_ACCOUNT_PK
ENABLE;

ALTER TABLE FIN_USER_ACCOUNT_CHARGE_LOG
ADD CONSTRAINT FIN_ACCOUNT_LOG_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX FIN_ACCOUNT_LOG_PK
ENABLE;

ALTER TABLE JOB_CATEGORY
ADD CONSTRAINT JOB_CATEGORY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX JOB_CATEGORY_PK
ENABLE;

ALTER TABLE JOB_SUB_CATEGORY
ADD CONSTRAINT JOB_SUB_CATEGORY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX JOB_SUB_CATEGORY_PK
ENABLE;

ALTER TABLE JOB_SUB_CATEGORY_EXPERTS
ADD CONSTRAINT JOB_SUB_CATEGORY_EXPERTS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX JOB_SUB_CATEGORY_EXPERTS_PK
ENABLE;

ALTER TABLE JOB_SUB_CATEGORY_SUBMIT
ADD CONSTRAINT JOB_SUB_CATEGORY_HIS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX JOB_SUB_CATEGORY_HIS_PK
ENABLE;

ALTER TABLE JOB_TEMPLATE
ADD CONSTRAINT JOB_TEMPLATE_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX JOB_TEMPLATE_PK
ENABLE;

ALTER TABLE LANCE_DISCUSS
ADD CONSTRAINT LANCE_DISCUSS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX LANCE_DISCUSS_PK
ENABLE;

ALTER TABLE LOCATION_AREA
ADD CONSTRAINT LOCATION_AREA_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX LOCATION_AREA_PK
ENABLE;

ALTER TABLE LOCATION_CITY
ADD CONSTRAINT LOCATION_CITY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX LOCATION_CITY_PK
ENABLE;

ALTER TABLE LOCATION_COUNTRY
ADD CONSTRAINT LOCATION_COUNTRY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX LOCATION_COUNTRY_PK
ENABLE;

ALTER TABLE LOCATION_PROVINCE
ADD CONSTRAINT LOCATION_PROVINCE_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX LOCATION_PROVINCE_PK
ENABLE;

ALTER TABLE LOCATION_REGION
ADD CONSTRAINT LOCATION_REGION_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX LOCATION_REGION_PK
ENABLE;

ALTER TABLE LOOKUPS
ADD CONSTRAINT LOOKUPS_PK PRIMARY KEY 
(
  ITEM_KEY 
)
USING INDEX LOOKUPS_PK1
ENABLE;

ALTER TABLE POST_JOBS
ADD CONSTRAINT POST_JOBS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX POST_JOBS_PK
ENABLE;

ALTER TABLE POST_JOBS_SKILL
ADD CONSTRAINT POST_JOBS_SKILL_PK PRIMARY KEY 
(
  POST_JOB_ID 
, SKILL_ID 
)
USING INDEX POST_JOBS_SKILL_PK
ENABLE;

ALTER TABLE POST_JOB_DISCUSS
ADD CONSTRAINT POST_JOB_DISCUSS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX POST_JOB_DISCUSS_PK
ENABLE;

ALTER TABLE PROJECT
ADD CONSTRAINT PROJECT_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX PROJECT_PK
ENABLE;

ALTER TABLE PS_TXN
ADD CONSTRAINT PS_TXN_PK PRIMARY KEY 
(
  COLLID 
, ID 
)
USING INDEX PS_TXN_IDX
ENABLE;

ALTER TABLE REG_EMAIL_CHK
ADD CONSTRAINT REG_EMAIL_CHK_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX REG_EMAIL_CHK_PK
ENABLE;

ALTER TABLE RETRIEVE_PASSWORD
ADD CONSTRAINT RETRIEVE_PASSWORD_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX RETRIEVE_PASSWORD_PK
ENABLE;

ALTER TABLE SKILLS
ADD CONSTRAINT SKILLS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX SKILLS_PK
ENABLE;

ALTER TABLE SKILL_SUPER_TYPE
ADD CONSTRAINT SKILL_SUPER_TYPE_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX SKILL_SUPER_TYPE_PK
ENABLE;

ALTER TABLE SPREAD_HEARD_FROM
ADD CONSTRAINT SPREAD_HEARD_FROM_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX SPREAD_HEARD_FROM_PK
ENABLE;

ALTER TABLE SYS_CALENDAR
ADD CONSTRAINT SYS_CALENDAR_PK PRIMARY KEY 
(
  SYS_DATE_REC 
)
USING INDEX SYS_CALENDAR_PK
ENABLE;

ALTER TABLE USER_COMPANY_HISTORY
ADD CONSTRAINT USER_COMPANY_HISTORY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_COMPANY_HISTORY_PK
ENABLE;

ALTER TABLE USER_EDUCATION
ADD CONSTRAINT USER_EDUCATION_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_EDUCATION_PK
ENABLE;

ALTER TABLE USER_JOB_CATEGORY
ADD CONSTRAINT USER_JOB_CATEGORY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_JOB_CATEGORY_PK
ENABLE;

ALTER TABLE USER_LICENSE
ADD CONSTRAINT USER_LESSIONS_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_LESSIONS_PK
ENABLE;

ALTER TABLE USER_LOCATION_LIST
ADD CONSTRAINT USER_LOCATION_LIST_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_LOCATION_LIST_PK
ENABLE;

ALTER TABLE USER_NOTIFICATION
ADD CONSTRAINT MAIL_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX MAIL_PK
ENABLE;

ALTER TABLE USER_PROJECT_HISTORY
ADD CONSTRAINT USER_WORK_HISTORY_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_WORK_HISTORY_PK
ENABLE;

ALTER TABLE USER_ROLE
ADD CONSTRAINT USER_ROLE_PK PRIMARY KEY 
(
  NAME 
)
USING INDEX USER_ROLE_PK
ENABLE;

ALTER TABLE USER_ROLE_GRANTS
ADD CONSTRAINT USER_ROLE_GRANTS_PK PRIMARY KEY 
(
  USER_NAME 
, ROLE_NAME 
)
USING INDEX USER_ROLE_GRANTS_PK
ENABLE;

ALTER TABLE USER_ROLE_GRANTS_LOG
ADD CONSTRAINT USER_ROLE_GRANTS_LOG_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_ROLE_GRANTS_LOG_PK
ENABLE;

ALTER TABLE USER_SKILL
ADD CONSTRAINT USER_SKILL_PK PRIMARY KEY 
(
  UUID 
)
USING INDEX USER_SKILL_PK
ENABLE;

ALTER TABLE USER_WATCH_LIST
ADD CONSTRAINT USER_WATCH_LIST_PK PRIMARY KEY 
(
  USER_NAME 
)
USING INDEX USER_WATCH_LIST_PK
ENABLE;

ALTER TABLE U_USER
ADD CONSTRAINT U_USER_PK PRIMARY KEY 
(
  USER_NAME 
)
USING INDEX U_USER_PK
ENABLE;

ALTER TABLE U_USER
ADD CONSTRAINT U_USER_EMAIL_UK UNIQUE 
(
  EMAIL 
)
USING INDEX U_USER_EMAIL_IDX
ENABLE;

COMMENT ON TABLE BG_NAVGATION IS '后台管理程序BG
导航条';

COMMENT ON TABLE COMPANY IS '公司';

COMMENT ON TABLE CONTRACT IS '合同';

COMMENT ON TABLE CONTRACT_MILESTONE IS '项目里程碑';

COMMENT ON TABLE CONTRACT_REPORT IS '工作日志';

COMMENT ON TABLE FIN_PAY_BILL IS '支付单（单笔支付记录）';

COMMENT ON TABLE FIN_USER_ACCOUNT IS '用户虚拟账户';

COMMENT ON TABLE FIN_USER_ACCOUNT_CHARGE_LOG IS '账户充值提现记录表';

COMMENT ON TABLE JOB_CATEGORY IS '工作大类';

COMMENT ON TABLE JOB_SUB_CATEGORY IS '工作小类';

COMMENT ON TABLE JOB_SUB_CATEGORY_EXPERTS IS '所属SubCategory对应的行业专家';

COMMENT ON TABLE JOB_SUB_CATEGORY_SUBMIT IS '修改SubCategory的申请';

COMMENT ON TABLE JOB_TEMPLATE IS '招聘信息发布参考模版';

COMMENT ON TABLE LOCATION_AREA IS '地址-城市下的区域';

COMMENT ON TABLE LOCATION_CITY IS '所有城市';

COMMENT ON TABLE LOCATION_COUNTRY IS '所有国家';

COMMENT ON TABLE LOCATION_PROVINCE IS '所有省';

COMMENT ON TABLE LOCATION_REGION IS '地区：大洲';

COMMENT ON TABLE LOOKUPS IS '值集';

COMMENT ON TABLE POST_JOBS IS '发布招聘信息';

COMMENT ON TABLE POST_JOBS_SKILL IS '招聘信息对应技能需求';

COMMENT ON TABLE POST_JOB_DISCUSS IS '已发布招聘信息讨论';

COMMENT ON TABLE PROJECT IS '合约';

COMMENT ON TABLE RETRIEVE_PASSWORD IS '找回密码记录表';

COMMENT ON TABLE SKILLS IS '全部技能';

COMMENT ON TABLE SKILL_SUPER_TYPE IS '技能大类';

COMMENT ON TABLE SPREAD_HEARD_FROM IS '本网站口碑、传播信息收集';

COMMENT ON TABLE USER_EDUCATION IS '教育信息';

COMMENT ON TABLE USER_LOCATION_LIST IS '用户保存的地址列表';

COMMENT ON TABLE USER_ROLE IS '角色';

COMMENT ON TABLE USER_ROLE_GRANTS IS '用户角色授权表';

COMMENT ON TABLE USER_SKILL IS '用户技能';

COMMENT ON TABLE U_USER IS '人员主表';

COMMENT ON COLUMN COMPANY.NAME IS '公司名';

COMMENT ON COLUMN COMPANY.ENTERPRISE_PROPERTY IS '企业性质';

COMMENT ON COLUMN COMPANY.EMPLOYEE_NUMBER_GRADE IS '员工数级别';

COMMENT ON COLUMN COMPANY.FOUND_YEAR IS '成立时间';

COMMENT ON COLUMN COMPANY.ABOUT_COMPANY IS '公司简介';

COMMENT ON COLUMN COMPANY.SERVICE_DESC IS '服务内容';

COMMENT ON COLUMN COMPANY.VIDEO IS '视频';

COMMENT ON COLUMN COMPANY.LOGO IS 'Logo图片位置';

COMMENT ON COLUMN COMPANY.LOCATION_COUNTRY IS '公司位置';

COMMENT ON COLUMN COMPANY.LOCATION_PROVINCE IS '公司位置';

COMMENT ON COLUMN COMPANY.LOCATION_CITY IS '公司位置';

COMMENT ON COLUMN COMPANY.LOCATION_DESC IS '公司位置';

COMMENT ON COLUMN CONTRACT.TITLE IS '合约名称';

COMMENT ON COLUMN CONTRACT.CONTENT IS '内容';

COMMENT ON COLUMN CONTRACT.ATTACHMENT_LINK IS '附件链接';

COMMENT ON COLUMN CONTRACT.CLIENT_NAME IS '甲方';

COMMENT ON COLUMN CONTRACT.CLIENT_SIGN_BY IS '合同签署方：self/company';

COMMENT ON COLUMN CONTRACT.CLIENT_TRUE_NAME IS '真实姓名';

COMMENT ON COLUMN CONTRACT.CLIENT_COMPANY_NAME IS '公司名';

COMMENT ON COLUMN CONTRACT.CLIENT_COMPANY_ID IS '公司ID';

COMMENT ON COLUMN CONTRACT.CLIENT_ID_NO IS '证件号';

COMMENT ON COLUMN CONTRACT.CLIENT_ID_TYPE IS '证件类型';

COMMENT ON COLUMN CONTRACT.CLIENT_EMAIL IS '邮件';

COMMENT ON COLUMN CONTRACT.CLIENT_PHONE IS '电话';

COMMENT ON COLUMN CONTRACT.LANCER_NAME IS '乙方';

COMMENT ON COLUMN CONTRACT.DATE_START IS '生效开始时间';

COMMENT ON COLUMN CONTRACT.DATE_END IS '生效结束时间';

COMMENT ON COLUMN CONTRACT.CLIENT_ROLE_TITLE IS '甲方角色名';

COMMENT ON COLUMN CONTRACT.LANCER_ROLE_TITLE IS '乙方角色名';

COMMENT ON COLUMN CONTRACT.POSTFORM IS '支付方式';

COMMENT ON COLUMN CONTRACT.HOURLY_PAY IS '每小时价格（按时支付）';

COMMENT ON COLUMN CONTRACT.WEEKLY_HOURS IS '每周工作小时数（按时支付）';

COMMENT ON COLUMN CONTRACT.FIXED_PAY_PRICE IS '固定支付金额（固定价格）';

COMMENT ON COLUMN CONTRACT.CLIENT_CONFIRM_DELAY_DAY IS '乙方完成~甲方确认间隔';

COMMENT ON COLUMN CONTRACT.CLIENT_PAY_DELAY_DAY IS '甲方确认~支付间隔';

COMMENT ON COLUMN CONTRACT.FIXED_PAY_DATE IS '每月固定支付日';

COMMENT ON COLUMN CONTRACT.FIXED_PAY_DELAY_HOLIDAY IS '每月固定支付日—是否遇假日顺延';

COMMENT ON COLUMN CONTRACT.NEED_DAILY_REPORT IS '是否需要日志';

COMMENT ON COLUMN CONTRACT.PROCESS_STATUS IS '草稿，进行中，完成等';

COMMENT ON COLUMN CONTRACT.PROCESS_STATUS_DESC IS '进度说明';

COMMENT ON COLUMN CONTRACT.LAST_PROCESS_STATUS IS '上一个状态';

COMMENT ON COLUMN CONTRACT.LANCER_TOTAL_SCORE IS '甲方对乙方总评';

COMMENT ON COLUMN CONTRACT.LANCER_QUALITY_SCORE IS '乙方工作质量';

COMMENT ON COLUMN CONTRACT.LANCER_PROFESS_SCORE IS '乙方工作专业';

COMMENT ON COLUMN CONTRACT.LANCER_COST_SCORE IS '乙方工作成本';

COMMENT ON COLUMN CONTRACT.LANCER_PLAN_SCORE IS '乙方工作计划';

COMMENT ON COLUMN CONTRACT.LANCER_RESPONS_SCORE IS '乙方工作责任';

COMMENT ON COLUMN CONTRACT.LANCER_EVALUATION IS '乙方工作附加描述';

COMMENT ON COLUMN CONTRACT.CLIENT_TOTAL_SCORE IS '乙方对甲方总评';

COMMENT ON COLUMN CONTRACT.CONTRACT_NAME IS '合同名称';

COMMENT ON COLUMN CONTRACT_MILESTONE.TITLE IS '名称';

COMMENT ON COLUMN CONTRACT_MILESTONE.LOCATION IS '地址';

COMMENT ON COLUMN CONTRACT_MILESTONE.REMARK IS '备忘、备注';

COMMENT ON COLUMN CONTRACT_MILESTONE.DATE_DELIVERY IS '交付日期 yyyy-MM-dd';

COMMENT ON COLUMN CONTRACT_MILESTONE.PRICE IS '金额';

COMMENT ON COLUMN CONTRACT_MILESTONE.PROCESS IS '进度：draft,done，doing，todo';

COMMENT ON COLUMN CONTRACT_MILESTONE.STATUS IS '--未确定用途';

COMMENT ON COLUMN CONTRACT_MILESTONE.PAY_STATUS IS '未支付、已支付、已到帐';

COMMENT ON COLUMN CONTRACT_MILESTONE.DATE_LATEST_PAY IS '最迟支付日期 yyyy-MM-dd';

COMMENT ON COLUMN CONTRACT_MILESTONE.PAY_BILL_NUMBER IS '支付单号';

COMMENT ON COLUMN CONTRACT_REPORT.STATUS_NAME IS '状态名称';

COMMENT ON COLUMN CONTRACT_REPORT.ADDRESS IS '地址';

COMMENT ON COLUMN CONTRACT_REPORT.DATE_RECORD IS '年月日 yyyy-MM-dd';

COMMENT ON COLUMN CONTRACT_REPORT.WORK_CONTENT IS '日报内容';

COMMENT ON COLUMN CONTRACT_REPORT.WORK_HOURS IS '工时';

COMMENT ON COLUMN CONTRACT_REPORT.WORK_REMARK IS '备注';

COMMENT ON COLUMN CONTRACT_REPORT.STATUS IS '确认、拒绝、待支付、已支付';

COMMENT ON COLUMN CONTRACT_REPORT.STATUS_REMARK IS '确认情况备注';

COMMENT ON COLUMN FIN_PAY_BILL.PAY_BILL_NUMBER IS '支付单号（根据时间生成，要简短）';

COMMENT ON COLUMN FIN_PAY_BILL.PAY_USER IS '甲方（支付方）';

COMMENT ON COLUMN FIN_PAY_BILL.PAY_AMOUNT IS '支付金额';

COMMENT ON COLUMN FIN_PAY_BILL.RECEIVE_USER IS '收款方';

COMMENT ON COLUMN FIN_PAY_BILL.RECEIVE_AMOUNT IS '实收金额';

COMMENT ON COLUMN FIN_PAY_BILL.FEES IS '手续费';

COMMENT ON COLUMN FIN_PAY_BILL.PAY_TIME IS '支付时间';

COMMENT ON COLUMN FIN_PAY_BILL.STATUS IS 'done;cancel';

COMMENT ON COLUMN FIN_PAY_BILL.CREATE_BY IS '创建时间';

COMMENT ON COLUMN FIN_USER_ACCOUNT.TEMP_AVALIABLE_AMOUNT IS '临时可用账户，项目金，赠送金额，会过期';

COMMENT ON COLUMN FIN_USER_ACCOUNT.REAL_AVALIABLE_AMOUNT IS '用户充值金额，不过期，永久金额';

COMMENT ON COLUMN FIN_USER_ACCOUNT.TOTAL_RECEIVE_AMOUNT IS '用户已赚金额，不过期';

COMMENT ON COLUMN FIN_USER_ACCOUNT.TOTAL_AMOUNT IS '总金额，以上字段相加得出，用于快速查询';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.MOVE_TARGET IS '银行名等';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.MOVE_DIRECTION IS 'in;out';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.MOVE_AMOUNT IS '金额';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.OTHER_FEE IS '第三方手续费';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.AFTER_REAL_AVALIABLE_AMOUNT IS '操作后剩余金额';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.BEFORE_REAL_AVALIABLE_AMOUNT IS '操前剩余金额';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.DESCRIPTION IS '描述';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.SUCCESS IS '操作是否Y成功，N失败';

COMMENT ON COLUMN FIN_USER_ACCOUNT_CHARGE_LOG.PAY_ON IS '支付时间';

COMMENT ON COLUMN JOB_SUB_CATEGORY.NAME IS '英文名';

COMMENT ON COLUMN JOB_SUB_CATEGORY.NAME_CN IS '中文名';

COMMENT ON COLUMN JOB_SUB_CATEGORY.DESCRIPTION IS '描述';

COMMENT ON COLUMN JOB_SUB_CATEGORY_EXPERTS.NAME IS '人员姓名';

COMMENT ON COLUMN JOB_SUB_CATEGORY_EXPERTS.TYPE IS '创建人推荐：recommend 订阅此领域消息用户：subscribe';

COMMENT ON COLUMN JOB_SUB_CATEGORY_EXPERTS.DESCRIPTION IS '描述';

COMMENT ON COLUMN JOB_SUB_CATEGORY_EXPERTS.USER_NAME IS '对应驻才网用户名';

COMMENT ON COLUMN JOB_SUB_CATEGORY_EXPERTS.RANK IS '级别';

COMMENT ON COLUMN JOB_SUB_CATEGORY_EXPERTS.APPROVAL IS '网站验证Y/N';

COMMENT ON COLUMN JOB_TEMPLATE.TYPE IS '1职位 2项目';

COMMENT ON COLUMN JOB_TEMPLATE.RANK IS '评级';

COMMENT ON COLUMN JOB_TEMPLATE.IS_DEFAULT IS '是否默认';

COMMENT ON COLUMN POST_JOBS.POSTFORM IS 'hourly时薪/fixed固定价格';

COMMENT ON COLUMN POST_JOBS.HOURLY_PAY_MIN IS '时薪：薪资范围';

COMMENT ON COLUMN POST_JOBS.WEEKLY_HOURS IS '时薪：hrs/week input';

COMMENT ON COLUMN POST_JOBS.DURATION_MIN IS '时薪：项目周期(周)';

COMMENT ON COLUMN POST_JOBS.FIXED_PAY_MIN IS '固定价格：价格';

COMMENT ON COLUMN POST_JOBS.JOB_VISIBILITY IS 'public/private';

COMMENT ON COLUMN POST_JOBS.ALLOW_SEARCH_ENGINES IS 'Y/N利用搜索引擎推广';

COMMENT ON COLUMN POST_JOBS.FIXED_LOCATION IS '是否指定地点';

COMMENT ON COLUMN POST_JOBS.WORK_CATEGORY IS '工作大类';

COMMENT ON COLUMN POST_JOBS.WORK_SUBCATEGORY IS '工作细分小类';

COMMENT ON COLUMN POST_JOBS.SPECIFIC_SKILL_A IS '特殊技能需求';

COMMENT ON COLUMN POST_JOBS.STATUS IS '1:草稿，2：发布，0：删除';

COMMENT ON COLUMN POST_JOBS.POST_JOB_DATE_START IS '需求发布开始时间';

COMMENT ON COLUMN POST_JOBS.POST_JOB_DATE_END IS '需求发布结束时间';

COMMENT ON COLUMN POST_JOBS.LOCATION_DESC IS '地点额外说明';

COMMENT ON COLUMN POST_JOBS.SIGN_BY IS '合同签署方：self/company';

COMMENT ON COLUMN POST_JOBS.INDEX_SKILLS IS '索引：技能名';

COMMENT ON COLUMN POST_JOBS.INDEX_WORK_CATEGORYS IS '索引：工作类型目录';

COMMENT ON COLUMN POST_JOBS.INDEX_LOCATION IS '索引：工作地点';

COMMENT ON COLUMN POST_JOBS.INDEX_ALL_META_INFO IS '索引：所有元信息';

COMMENT ON COLUMN POST_JOBS.RANK IS '排序优先级';

COMMENT ON COLUMN POST_JOBS.RANK_DESC IS '排序优先级说明';

COMMENT ON COLUMN POST_JOBS.APPLY_COUNT IS '申请数量';

COMMENT ON COLUMN POST_JOBS.SUBSCRIBE_UPDATE IS '简历(需求)更新后再次推送：Y/N';

COMMENT ON COLUMN POST_JOBS.SUBSCRIBE_FREQUENCY IS '简历订阅频率：week;day;no';

COMMENT ON COLUMN POST_JOBS_SKILL.REQUIRE_LEVEL IS '此技能所需级别';

COMMENT ON COLUMN POST_JOB_DISCUSS.IS_APPLY IS '是否申请此工作Y/N';

COMMENT ON COLUMN POST_JOB_DISCUSS.POSTFORM IS 'hourly时薪/fixed固定价格/空';

COMMENT ON COLUMN POST_JOB_DISCUSS.HOURLY_PAY IS '报价：时薪';

COMMENT ON COLUMN POST_JOB_DISCUSS.FIXED_PAY_MIN IS '固定价格（最小）';

COMMENT ON COLUMN POST_JOB_DISCUSS.FIXED_PAY_MAX IS '固定价格（最大）';

COMMENT ON COLUMN POST_JOB_DISCUSS.WEEKLY_HOURS IS '每周工作时间';

COMMENT ON COLUMN POST_JOB_DISCUSS.ENTERY_DATE IS '可进入时间/空（稍后确定）';

COMMENT ON COLUMN POST_JOB_DISCUSS.SIGN_BY IS '合同签署方：self/company';

COMMENT ON COLUMN POST_JOB_DISCUSS.STATUS IS 'hide/display';

COMMENT ON COLUMN POST_JOB_DISCUSS.STATUS_LOG IS '状态说明';

COMMENT ON COLUMN PROJECT.PROJECT_COMPANY_ID IS '项目所属公司';

COMMENT ON COLUMN SKILLS.NAME IS '英文名';

COMMENT ON COLUMN SKILLS.NAME_CN IS '中文名';

COMMENT ON COLUMN SKILLS.DESCRIPTION IS '描述';

COMMENT ON COLUMN SKILL_SUPER_TYPE.NAME IS '英文名';

COMMENT ON COLUMN SKILL_SUPER_TYPE.NAME_CN IS '中文名';

COMMENT ON COLUMN SKILL_SUPER_TYPE.DESCRIPTION IS '描述';

COMMENT ON COLUMN SYS_CALENDAR.SYS_DATE_REC IS 'yyyy-MM-dd';

COMMENT ON COLUMN SYS_CALENDAR.DAY IS '星期几';

COMMENT ON COLUMN SYS_CALENDAR.DATE_TYPE IS '工作日，周末，法定假日，临时假日等';

COMMENT ON COLUMN USER_COMPANY_HISTORY.NAME IS '公司名称';

COMMENT ON COLUMN USER_COMPANY_HISTORY.TITLE IS '职位头衔';

COMMENT ON COLUMN USER_COMPANY_HISTORY.WORK_AREA IS '工作地区';

COMMENT ON COLUMN USER_COMPANY_HISTORY.CONTENT IS '职务描述';

COMMENT ON COLUMN USER_COMPANY_HISTORY.START_DATE IS '开始时间
';

COMMENT ON COLUMN USER_COMPANY_HISTORY.END_DATE IS '结束时间';

COMMENT ON COLUMN USER_COMPANY_HISTORY.STATUS IS '状态';

COMMENT ON COLUMN USER_EDUCATION.INSTITUTION_NAME IS '机构名：明文';

COMMENT ON COLUMN USER_EDUCATION.DEGREE_TYPE IS '学位信息：明文';

COMMENT ON COLUMN USER_EDUCATION.PROFESSIONAL IS '专业名称';

COMMENT ON COLUMN USER_EDUCATION.DESCRIPTION IS '学习内容描述';

COMMENT ON COLUMN USER_EDUCATION.STUDY_MARK IS '学习成绩';

COMMENT ON COLUMN USER_EDUCATION.CLUB_EVENTS IS '社团活动';

COMMENT ON COLUMN USER_EDUCATION.ATTACH1_LINK IS '附件1';

COMMENT ON COLUMN USER_EDUCATION.ATTACH2_LINK IS '附件2';

COMMENT ON COLUMN USER_EDUCATION.ATTACH3_LINK IS '附件3';

COMMENT ON COLUMN USER_EDUCATION.TOBE_VERIFIED IS '是否需要验证（Y/N）';

COMMENT ON COLUMN USER_EDUCATION.DONE_VERIFIED IS '是否完成验证（Y/N）';

COMMENT ON COLUMN USER_EDUCATION.DISPLAY IS '是否公开显示（Y/N）';

COMMENT ON COLUMN USER_JOB_CATEGORY.SUBSCRIBE IS '订阅相关消息';

COMMENT ON COLUMN USER_JOB_CATEGORY.IN_DUTY IS '从事此领域工作';

COMMENT ON COLUMN USER_LICENSE.NAME IS '认证名称';

COMMENT ON COLUMN USER_LICENSE.REG_ORGANIZATION IS '认证机构';

COMMENT ON COLUMN USER_LICENSE.CONTENT IS '描述（备注）';

COMMENT ON COLUMN USER_LICENSE.REG_NUMBER IS '认证号';

COMMENT ON COLUMN USER_LICENSE.REG_ADDRESS IS '认证网址';

COMMENT ON COLUMN USER_LICENSE.START_DATE IS '有效期开始时间';

COMMENT ON COLUMN USER_LICENSE.END_DATE IS '有效期结束时间';

COMMENT ON COLUMN USER_NOTIFICATION.TYPE IS 'mail
';

COMMENT ON COLUMN USER_NOTIFICATION.READ IS 'Y/N
';

COMMENT ON COLUMN USER_PROJECT_HISTORY.NAME IS '项目名称';

COMMENT ON COLUMN USER_PROJECT_HISTORY.TITLE IS '角色';

COMMENT ON COLUMN USER_PROJECT_HISTORY.CONTENT IS '正文';

COMMENT ON COLUMN USER_PROJECT_HISTORY.START_DATE IS '开始时间';

COMMENT ON COLUMN USER_PROJECT_HISTORY.END_DATE IS '结束时间(可以为空)';

COMMENT ON COLUMN USER_PROJECT_HISTORY.PROJECT_ADDRESS IS '项目网址';

COMMENT ON COLUMN USER_SKILL.NAME IS '技能名称';

COMMENT ON COLUMN USER_SKILL.DISPLAY IS '是否显示';

COMMENT ON COLUMN USER_SKILL.SHOW_ORDER IS '显示顺序';

COMMENT ON COLUMN USER_SKILL.MASTER_LEVEL IS '掌握程度';

COMMENT ON COLUMN USER_WATCH_LIST.WATCH_USER_NAME IS '被注视对象';

COMMENT ON COLUMN USER_WATCH_LIST.POST_JOB_ID IS '发布工作ID';

COMMENT ON COLUMN USER_WATCH_LIST.NOTE IS '备注';

COMMENT ON COLUMN USER_WATCH_LIST.TYPE IS '被注视对象：job/user';

COMMENT ON COLUMN U_USER.IDENTITY_NO IS '身份证号码(港澳台护照等)';

COMMENT ON COLUMN U_USER.IDENTITY_TYPE IS '证件类型';

COMMENT ON COLUMN U_USER.DESCRIPTION IS '个人描述';

COMMENT ON COLUMN U_USER.LOCATION_A IS '用户主要地址';

COMMENT ON COLUMN U_USER.LOCATION_B_REGION IS '用户次要地址';

COMMENT ON COLUMN U_USER.TAGLINE IS '个人简介
';

COMMENT ON COLUMN U_USER.HOURLY_RATE IS 'Lancer提出的每小时价格';

COMMENT ON COLUMN U_USER.CHARGE_RATE IS '网站会向客户提出的价格';

COMMENT ON COLUMN U_USER.OVERVIEW IS '简历上的简短描述';

COMMENT ON COLUMN U_USER.SERVICE_DESCRIPTION IS '服务描述';

COMMENT ON COLUMN U_USER.PAYMENT_TERMS IS '支付方式描述';

COMMENT ON COLUMN U_USER.KEYWORDS IS '英文逗号分隔的关键词';

COMMENT ON COLUMN U_USER.ADDRESS_DISPLAY IS '地址显示级别：all，city，no';

COMMENT ON COLUMN U_USER.LAST_LOGIN_TIME IS '最后登录时间';

COMMENT ON COLUMN U_USER.CAN_BE_SEARCH IS '可被搜索';

COMMENT ON COLUMN U_USER.DEFAULT_ROLE IS '当前用户默认角色，用于默认页面展示';

COMMENT ON COLUMN U_USER.RANK IS '排序优先级';

COMMENT ON COLUMN U_USER.RANK_DESC IS '排序优先级说明';

COMMENT ON COLUMN U_USER.STATUS IS '状态：active,unactive等,用于Email验证';

COMMENT ON COLUMN U_USER.WORK_STATUS IS '工作状态：working,waiting';

COMMENT ON COLUMN U_USER.INDEX_SKILL IS '技能';

COMMENT ON COLUMN U_USER.REFERRER IS '推荐人';

COMMENT ON COLUMN U_USER.SUBSCRIBE_UPDATE IS '邮件(需求)更新后再次推送：Y/N';

COMMENT ON COLUMN U_USER.SUBSCRIBE_FREQUENCY IS '邮件订阅频率：week;day;no';

CREATE SEQUENCE PS_TXN_SEQ INCREMENT BY 50 MAXVALUE 999999999999999999999999999 MINVALUE 1 CACHE 20;
